name: Deploy Nuxt App to Hostinger

on:
    push:
        branches:
            - main # Trigger workflow on changes to the main branch

jobs:
    deploy:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 18

            - name: Create .env file
              env:
                  NUXT_PUBLIC_PRODUCTS_PER_PAGE: ${{ secrets.NUXT_PUBLIC_PRODUCTS_PER_PAGE }}
                  NUXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${{ secrets.NUXT_PUBLIC_STRIPE_PUBLISHABLE_KEY }}
                  PRIMARY_COLOR: ${{ secrets.PRIMARY_COLOR }}
                  GQL_HOST: ${{ secrets.GQL_HOST }}
                  NUXT_IMAGE_DOMAINS: ${{ secrets.NUXT_IMAGE_DOMAINS }}
                  API_BASE_URL: ${{ secrets.API_BASE_URL }}
                  SITE_URL: ${{ secrets.SITE_URL }}
              run: |
                  echo "GQL_HOST=\"${GQL_HOST}\"" >> .env
                  echo "NUXT_PUBLIC_PRODUCTS_PER_PAGE=\"${NUXT_PUBLIC_PRODUCTS_PER_PAGE}\"" >> .env
                  echo "NUXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=\"${NUXT_PUBLIC_STRIPE_PUBLISHABLE_KEY}\"" >> .env
                  echo "PRIMARY_COLOR=\"${PRIMARY_COLOR}\"" >> .env
                  echo "NUXT_IMAGE_DOMAINS=\"${NUXT_IMAGE_DOMAINS}\"" >> .env
                  echo "API_BASE_URL=\"${API_BASE_URL}\"" >> .env
                  echo "SITE_URL=\"${SITE_URL}\"" >> .env

            - name: Install dependencies
              run: npm install

            - name: Build Nuxt app
              run: npm run generate

            - name: Install lftp
              run: sudo apt-get update && sudo apt-get install -y lftp

            - name: Deploy to Hostinger
              env:
                  FTP_HOST: ${{ secrets.FTP_HOST }}
                  FTP_USERNAME: ${{ secrets.FTP_USERNAME }}
                  FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
              run: |
                  ping -c 4 $FTP_HOST || (echo "Cannot reach FTP host" && exit 1)
                  if [ ! -d "./dist" ]; then
                      echo "Error: ./dist directory does not exist or is empty."
                      exit 1
                  fi
                  lftp -c "
                  set ftp:passive-mode true;
                  set net:timeout 10;
                  set net:max-retries 2;
                  open -u $FTP_USERNAME,$FTP_PASSWORD $FTP_HOST;
                  mirror --reverse --only-newer ./dist/ /__tilapiachips;
                  quit
                  "
