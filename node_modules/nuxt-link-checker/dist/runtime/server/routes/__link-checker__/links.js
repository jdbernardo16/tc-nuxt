import { serverQueryContent } from "#content/server";
import { defineCachedEventHandler, useRuntimeConfig } from "#imports";
import pagePaths from "#nuxt-link-checker-sitemap/pages.mjs";
import { createDefu } from "defu";
const merger = createDefu((obj, key, value) => {
  if (Array.isArray(obj[key]) && Array.isArray(value))
    obj[key] = Array.from(/* @__PURE__ */ new Set([...obj[key], ...value]));
  return obj[key];
});
function mergeOnKey(arr, key) {
  const res = {};
  arr.forEach((item) => {
    const k = item[key];
    res[k] = merger(item, res[k] || {});
  });
  return Object.values(res);
}
export default defineCachedEventHandler(async (e) => {
  const runtimeConfig = useRuntimeConfig().public["nuxt-link-checker"] || {};
  const linkDb = [
    ...pagePaths
  ];
  if (runtimeConfig.hasSitemapModule) {
    const sitemapDebug = await $fetch("/__sitemap__/debug.json");
    const entries = sitemapDebug.globalSources.map((source) => source.urls).flat();
    linkDb.push(...entries.map((s) => ({ path: s.loc, title: "" })));
  }
  if (serverQueryContent) {
    const contentDocuments = await serverQueryContent(e).find();
    if (contentDocuments) {
      linkDb.push(...contentDocuments.map((doc) => ({
        path: doc._path,
        title: doc.title
      })));
    }
  }
  return mergeOnKey(linkDb, "link");
}, {
  maxAge: 10
  // avoid thrashing
});
