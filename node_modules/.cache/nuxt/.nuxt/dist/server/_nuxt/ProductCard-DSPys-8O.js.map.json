{"file":"ProductCard-DSPys-8O.js","mappings":";;;;;;;;;;;AACM,UAAA,EAAE,EAAE,IAAI,QAAQ;AAKhB,UAAA,EAAE,cAAc,IAAI,aAAa;AAEjC,UAAA,iBAAiB,SAAS,MAAc;;AACtC,UAAA,GAAC,aAAI,SAAJ,mBAAM,iBAAgB,GAAC,aAAI,SAAJ,mBAAM,iBAAwB,QAAA;AAC1D,YAAM,YAAY,YAAW,sBAAA,mBAAM,YAAY;AAC/C,YAAM,eAAe,YAAW,aAAA,SAAA,mBAAM,eAAe;AACrD,aAAO,KAAK,OAAQ,YAAY,gBAAgB,eAAgB,GAAG,IAAI;AAAA,IAAA,CAC1E;AAEK,UAAA,gBAAgB,SAAS,MAAM,QAAI,KAAC,gBAAgB,cAAc,cAAc,QAAQ;AAExF,UAAA,gBAAgB,SAAS,MAAM;AACjC,WAAI,+CAAe,eAAc,UAAW,QAAO,eAAe;AAClE,aAAO,EAAE,sBAAsB,IAAI,EAAE,sBAAsB,IAAI;AAAA,IAAA,CAClE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZD,MAAM,WAAW;;;;;;;;;;AAPjB,UAAM,QAAQ,SAAS;AACjB,UAAA,EAAE,cAAc,IAAI,aAAa;AACvC,UAAM,QAAQ;AAMd,UAAM,YAAY,KAAK,MAAM,WAAW,KAAK;AAG7C,UAAM,cAAc,KAAI,WAAM,UAAN,mBAAa,MAAgB;AACrD,UAAM,UAAU,MAAI,6BAAY,UAAZ,mBAAmB,MAAM,aAAa,OAAtC,mBAA0C,MAAM,KAAK,OAArD,mBAAyD,MAAM,SAAQ,EAAE;AAG7F;AAAA,MACI,MAAM,MAAM;AAAA,MACZ,MAAM;;AACU,oBAAA,QAAQ,MAAM,MAAM;AAChC,gBAAQ,UAAQA,OAAAC,OAAAC,MAAA,YAAY,UAAZ,gBAAAA,IAAmB,MAAM,aAAa,OAAtC,gBAAAD,IAA0C,MAAM,KAAK,OAArD,gBAAAD,IAAyD,MAAM,SAAQ,CAAC;AAAA,MAAA;AAAA,IAEhG;AAEA,UAAM,YAAY;AAAA,MACd;;AAAM,iBAAAC,OAAAC,MAAA,MAAM,SAAN,gBAAAA,IAAY,UAAZ,gBAAAD,IAAmB,gBAAaE,OAAAH,MAAA,MAAM,SAAN,gBAAAA,IAAY,UAAZ,gBAAAG,IAAmB,wBAAuB;AAAA;AAAA,IACpF;AACM,UAAA,iBAAiB,SAAiB,MAAM;;AACtC,UAAA,QAAQ,MAAM,QAAQ;AACtB,cAAM,oBAAmBF,OAAAC,MAAA,MAAM,SAAN,gBAAAA,IAAY,eAAZ,gBAAAD,IAAwB,MAAM,OAAO,CAAC,cAAc;;AACnE,gBAAA,yBAAwBC,MAAA,UAAU,eAAV,gBAAAA,IAAsB,MAAM;AAAA,YAAK,CAAC,cAC5D,QAAQ,MAAM,KAAK,CAAC,UAAA;;AAAU,sBAAAA,MAAA,uCAAW,UAAX,gBAAAA,IAAkB,SAAS;AAAA,aAAM;AAAA;AAE7D,gBAAA,kBAAkB,QAAQ,MAAM,KAAK,CAAC,UAAU;;AAAA,oBAAAA,MAAA,UAAU,SAAV,gBAAAA,IAAgB,SAAS;AAAA,WAAM;AACrF,iBAAO,yBAAyB;AAAA,QAAA;AAEpC,YAAI,qDAAkB;AAEd,mBAAAC,OAAAH,MAAA,iBAAiB,CAAC,MAAlB,gBAAAA,IAAqB,UAArB,gBAAAG,IAA4B,0BAC5B,4BAAiB,CAAC,MAAlB,mBAAqB,UAArB,mBAA4B,cAC5B,UAAU;AAAA,MAAA;AAGtB,aAAO,UAAU;AAAA,IAAA,CACpB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["_c","_b","_a","_d"],"sources":["../../../../../../../woonuxt_base/app/components/productElements/SaleBadge.vue","../../../../../../../woonuxt_base/app/components/productElements/ProductCard.vue"],"sourcesContent":["<script setup lang=\"ts\">\nconst { t } = useI18n()\nconst { node } = defineProps({\n    node: { type: Object, required: true },\n})\n\nconst { storeSettings } = useAppConfig()\n\nconst salePercentage = computed((): string => {\n    if (!node?.rawSalePrice || !node?.rawRegularPrice) return ''\n    const salePrice = parseFloat(node?.rawSalePrice)\n    const regularPrice = parseFloat(node?.rawRegularPrice)\n    return Math.round(((salePrice - regularPrice) / regularPrice) * 100) + ` %`\n})\n\nconst showSaleBadge = computed(() => node.rawSalePrice && storeSettings.saleBadge !== 'hidden')\n\nconst textToDisplay = computed(() => {\n    if (storeSettings?.saleBadge === 'percent') return salePercentage.value\n    return t('messages.shop.onSale') ? t('messages.shop.onSale') : 'Sale'\n})\n</script>\n\n<template>\n    <span\n        v-if=\"showSaleBadge\"\n        class=\"red-badge\"\n        >{{ textToDisplay }}</span\n    >\n</template>\n\n<style lang=\"postcss\" scoped>\n.red-badge {\n    @apply rounded-md bg-red-400 text-xs text-white tracking-tight px-1.5 leading-6 z-10;\n    background: #000 linear-gradient(0deg, #f87171, #f87171);\n}\n</style>\n","<script setup lang=\"ts\">\nconst route = useRoute()\nconst { storeSettings } = useAppConfig()\nconst props = defineProps({\n    node: { type: Object as PropType<Product>, required: true },\n    index: { type: Number, default: 1 },\n})\n\nconst imgWidth = 280\nconst imgHeight = Math.round(imgWidth * 1.125)\n\n// example: ?filter=pa_color[green,blue],pa_size[large]\nconst filterQuery = ref(route.query?.filter as string)\nconst paColor = ref(filterQuery.value?.split('pa_color[')[1]?.split(']')[0]?.split(',') || [])\n\n// watch filterQuery\nwatch(\n    () => route.query,\n    () => {\n        filterQuery.value = route.query.filter as string\n        paColor.value = filterQuery.value?.split('pa_color[')[1]?.split(']')[0]?.split(',') || []\n    },\n)\n\nconst mainImage = computed<string>(\n    () => props.node?.image?.sourceUrl || props.node?.image?.producCardSourceUrl || '/images/placeholder.jpg',\n)\nconst imagetoDisplay = computed<string>(() => {\n    if (paColor.value.length) {\n        const activeColorImage = props.node?.variations?.nodes.filter((variation) => {\n            const hasMatchingAttributes = variation.attributes?.nodes.some((attribute) =>\n                paColor.value.some((color) => attribute?.value?.includes(color)),\n            )\n            const hasMatchingSlug = paColor.value.some((color) => variation.slug?.includes(color))\n            return hasMatchingAttributes || hasMatchingSlug\n        })\n        if (activeColorImage?.length)\n            return (\n                activeColorImage[0]?.image?.producCardSourceUrl ||\n                activeColorImage[0]?.image?.sourceUrl ||\n                mainImage.value\n            )\n    }\n    return mainImage.value\n})\n</script>\n\n<template>\n    <div class=\"relative group\">\n        <NuxtLink\n            v-if=\"node.slug\"\n            :to=\"`/product/${decodeURIComponent(node.slug)}`\"\n            :title=\"node.name\"\n        >\n            <SaleBadge\n                :node\n                class=\"absolute top-2 right-2\"\n            />\n\n            <NuxtImg\n                v-if=\"imagetoDisplay\"\n                :width=\"imgWidth\"\n                :height=\"imgHeight\"\n                :src=\"imagetoDisplay\"\n                format=\"webp\"\n                quality=\"80\"\n                :alt=\"node.image?.altText || node.name || 'Product image'\"\n                :title=\"node.image?.title || node.name\"\n                :loading=\"index <= 3 ? 'eager' : 'lazy'\"\n                class=\"rounded-lg object-top object-contain w-full aspect-9/8\"\n                placeholder\n                placeholder-class=\"blur-xl\"\n            />\n        </NuxtLink>\n        <div class=\"p-2\">\n            <StarRating\n                v-if=\"storeSettings.showReviews\"\n                :rating=\"node.averageRating\"\n                :count=\"node.reviewCount\"\n            />\n            <NuxtLink\n                v-if=\"node.slug\"\n                :to=\"`/product/${decodeURIComponent(node.slug)}`\"\n                :title=\"node.name\"\n            >\n                <h2 class=\"mb-2 font-light leading-tight group-hover:text-primary\">{{ node.name }}</h2>\n            </NuxtLink>\n            <ProductPrice\n                class=\"text-sm\"\n                :sale-price=\"node.salePrice\"\n                :regular-price=\"node.regularPrice\"\n            />\n        </div>\n    </div>\n</template>\n"],"version":3}