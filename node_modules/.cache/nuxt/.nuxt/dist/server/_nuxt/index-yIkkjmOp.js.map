{"version":3,"file":"index-yIkkjmOp.js","sources":["../../../../../../../woonuxt_base/app/components/homeElements/HomeBanner.vue","../../../../../../../woonuxt_base/app/components/homeElements/FeaturedProducts.vue","../../../../../../../woonuxt_base/app/components/homeElements/BlogSection.vue","../../../../../../../woonuxt_base/app/pages/index.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { onMounted, onBeforeUnmount } from 'vue'\nimport { gsap } from 'gsap'\nimport { ScrollTrigger } from 'gsap/ScrollTrigger'\n\ndefineProps<{ cms: any }>()\n\ngsap.registerPlugin(ScrollTrigger)\n\nlet scrollTriggers = [] // To store all ScrollTrigger instances\n\nonMounted(() => {\n    const firstLeft = gsap.utils.toArray('.firstLeft')\n    firstLeft.forEach((fadeOut) => {\n        const trigger = gsap.to(fadeOut, {\n            scrollTrigger: {\n                trigger: '.firstFrame',\n                start: 'top top',\n                end: 'bottom 0',\n                scrub: true,\n                duration: 1,\n                ease: 'none',\n            },\n            rotate: -10,\n            left: -300,\n            top: -300,\n        }).scrollTrigger\n        scrollTriggers.push(trigger)\n    })\n\n    const secondLeft = gsap.utils.toArray('.secondLeft')\n    secondLeft.forEach((fadeOut) => {\n        const trigger = gsap.to(fadeOut, {\n            scrollTrigger: {\n                trigger: '.firstFrame',\n                start: 'top top',\n                end: 'bottom 0',\n                scrub: true,\n                duration: 1,\n                ease: 'none',\n            },\n            rotate: -10,\n            left: -300,\n            top: -300,\n        }).scrollTrigger\n        scrollTriggers.push(trigger)\n    })\n\n    const thirdLeft = gsap.utils.toArray('.thirdLeft')\n    thirdLeft.forEach((fadeOut) => {\n        const trigger = gsap.to(fadeOut, {\n            scrollTrigger: {\n                trigger: '.firstFrame',\n                start: 'top top',\n                end: 'bottom 0',\n                scrub: true,\n                duration: 1,\n                ease: 'none',\n            },\n            rotate: -10,\n            left: -400,\n            top: -300,\n        }).scrollTrigger\n        scrollTriggers.push(trigger)\n    })\n\n    const firstRight = gsap.utils.toArray('.firstRight')\n    firstRight.forEach((fadeOut) => {\n        const trigger = gsap.to(fadeOut, {\n            scrollTrigger: {\n                trigger: '.firstFrame',\n                start: 'top top',\n                end: 'bottom 0',\n                scrub: true,\n                duration: 1,\n                ease: 'none',\n            },\n            rotate: 10,\n            right: -300,\n            top: -300,\n        }).scrollTrigger\n        scrollTriggers.push(trigger)\n    })\n\n    const secondRight = gsap.utils.toArray('.secondRight')\n    secondRight.forEach((fadeOut) => {\n        const trigger = gsap.to(fadeOut, {\n            scrollTrigger: {\n                trigger: '.firstFrame',\n                start: 'top top',\n                end: 'bottom 0',\n                scrub: true,\n                duration: 1,\n                ease: 'none',\n            },\n            rotate: 10,\n            right: -300,\n            top: -300,\n        }).scrollTrigger\n        scrollTriggers.push(trigger)\n    })\n\n    const thirdRight = gsap.utils.toArray('.thirdRight')\n    thirdRight.forEach((fadeOut) => {\n        const trigger = gsap.to(fadeOut, {\n            scrollTrigger: {\n                trigger: '.firstFrame',\n                start: 'top top',\n                end: 'bottom 0',\n                scrub: true,\n                duration: 1,\n                ease: 'none',\n            },\n            rotate: 10,\n            right: -400,\n            top: -300,\n        }).scrollTrigger\n        scrollTriggers.push(trigger)\n    })\n\n    const stickyTrigger = ScrollTrigger.create({\n        trigger: '.firstFrame',\n        start: 'top top',\n        end: 'bottom bottom',\n        pin: '.stickyItem',\n    })\n    scrollTriggers.push(stickyTrigger)\n})\n\nonBeforeUnmount(() => {\n    // Kill all ScrollTriggers\n    scrollTriggers.forEach((trigger) => trigger.kill())\n    ScrollTrigger.getAll().forEach((trigger) => trigger.kill())\n    gsap.killTweensOf('*') // Kill all GSAP tweens\n})\n</script>\n<template>\n    <div class=\"lg:h-[150vh] w-full bg-gray-100 flex justify-center relative firstFrame\">\n        <nuxt-img\n            class=\"absolute top-0 lef-0 w-full h-full opacity-10\"\n            src=\"/images/aurora.png\"\n        />\n        <div\n            class=\"lg:block hidden absolute left-[-100px] top-[-10px] rotate-[15deg] w-[150px] h-[250px] lg:w-[300px] lg:h-[500px] firstLeft z-[5]\"\n        >\n            <nuxt-img src=\"/images/original.png\" />\n        </div>\n        <div\n            class=\"lg:block hidden absolute left-[-50px] top-[300px] rotate-[20deg] w-[150px] h-[250px] lg:w-[300px] lg:h-[500px] secondLeft z-[4]\"\n        >\n            <nuxt-img src=\"/images/garlic_parmesan.png\" />\n        </div>\n        <div\n            class=\"lg:block hidden absolute left-[50px] top-[500px] rotate-[35deg] w-[150px] h-[250px] lg:w-[300px] lg:h-[500px] thirdLeft z-[1]\"\n        >\n            <nuxt-img src=\"/images/salted_egg.png\" />\n        </div>\n\n        <div\n            class=\"lg:block hidden absolute right-[-100px] top-[-10px] rotate-[-15deg] w-[150px] h-[250px] lg:w-[300px] lg:h-[500px] firstRight z-[5]\"\n        >\n            <nuxt-img src=\"/images/barbeque.png\" />\n        </div>\n        <div\n            class=\"lg:block hidden absolute right-[-50px] top-[300px] rotate-[-20deg] w-[150px] h-[250px] lg:w-[300px] lg:h-[500px] secondRight z-[4]\"\n        >\n            <nuxt-img src=\"/images/cheese.png\" />\n        </div>\n        <div\n            class=\"lg:block hidden absolute right-[50px] top-[500px] rotate-[-35deg] w-[150px] h-[250px] lg:w-[300px] lg:h-[500px] thirdRight z-[1]\"\n        >\n            <nuxt-img src=\"/images/sweet_spicy.png\" />\n        </div>\n\n        <div class=\"h-[100vh] stickyItem flex items-center justify-center w-full lg:px-0 px-4\">\n            <div class=\"text-center w-[550px] relative z-[2]\">\n                <p class=\"text-h3 lg:text-h1 mb-8 playfair\">{{ cms.header }}</p>\n                <p class=\"leading-6 font-light mb-10\">{{ cms.description }}</p>\n                <div class=\"flex items-center space-y-6 lg:space-y-0 lg:space-x-4 w-fit m-auto lg:flex-row flex-col\">\n                    <GeneralButton>Be A Reseller</GeneralButton>\n                    <GeneralButton variant=\"outline\">Explore Products</GeneralButton>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n","<script setup lang=\"ts\">\nimport gsap from 'gsap'\nimport { ScrollTrigger } from 'gsap/ScrollTrigger'\ngsap.registerPlugin(ScrollTrigger)\ndefineProps<{ cms: any }>()\nonMounted(() => {\n    const details = gsap.utils.toArray('.desktopContentSection:not(:first-child)')\n    const photos = gsap.utils.toArray('.desktopPhoto:not(:first-child)')\n\n    gsap.set(photos, { opacity: 0 })\n\n    const allPhotos = gsap.utils.toArray('.desktopPhoto')\n\n    // create\n    let mm = gsap.matchMedia()\n\n    // add a media query. When it matches, the associated function will run\n    mm.add('(min-width: 1024px)', () => {\n        // this setup code only runs when viewport is at least 600px wide\n        console.log('desktop')\n\n        ScrollTrigger.create({\n            trigger: '.gallery',\n            start: 'top 112px',\n            end: 'bottom bottom',\n            pin: '.right',\n            markers: false,\n        })\n\n        //create scrolltrigger for each details section\n        //trigger photo animation when headline of each details section\n        //reaches 80% of window height\n        details.forEach((detail, index) => {\n            let headline = detail.querySelector('h3')\n            let animation = gsap.timeline().to(photos[index], { opacity: 1 }).set(allPhotos[index], { autoAlpha: 0 })\n            ScrollTrigger.create({\n                trigger: headline,\n                start: 'top 80%',\n                end: 'top 50%',\n                animation: animation,\n                scrub: true,\n                markers: false,\n            })\n        })\n\n        return () => {\n            // optional\n            // custom cleanup code here (runs when it STOPS matching)\n            console.log('mobile')\n        }\n    })\n})\n</script>\n<template>\n    <div class=\"relative lg:pb-0 pb-10\">\n        <div class=\"w-full lg:px-20 lg:pt-20 lg:pb-0 px-4 pt-10\">\n            <h3 class=\"text-4xl lg:text-h3 text-center playfair lg:mb-0 mb-10\">{{ cms.header }}</h3>\n        </div>\n        <nuxt-img\n            class=\"absolute top-0 left-0 w-full h-full opacity-30\"\n            src=\"/images/product-bg.png\"\n        />\n        <div class=\"gallery relative\">\n            <div class=\"left z-[2]\">\n                <div class=\"desktopContent\">\n                    <div\n                        v-for=\"section in cms.featuredProducts\"\n                        :key=\"section.id\"\n                        class=\"desktopContentSection\"\n                    >\n                        <h3 class=\"playfair text-h3 mb-6\">{{ section.name }}</h3>\n                        <div class=\"ck-content text-lg\">\n                            <p>{{ section.description }}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"right\">\n                <!-- desktop content -->\n\n                <div class=\"desktopPhotos m-auto\">\n                    <div\n                        v-for=\"photo in cms.featuredProducts\"\n                        :key=\"photo.id\"\n                        class=\"desktopPhoto\"\n                    >\n                        <nuxt-img\n                            class=\"w-full h-full object-contain\"\n                            :src=\"photo.image.node.sourceUrl\"\n                        />\n                    </div>\n                </div>\n\n                <!-- mobile content -->\n                <div class=\"mobileContent\">\n                    <div\n                        v-for=\"item in cms.featuredProducts\"\n                        :key=\"item.id\"\n                        class=\"mb-10 last:mb-0\"\n                    >\n                        <div class=\"aspect-w-1 aspect-h-1 mb-4\">\n                            <nuxt-img\n                                class=\"w-full h-full object-contain\"\n                                :src=\"item.image.node.sourceUrl\"\n                            />\n                        </div>\n                        <h1 class=\"text-3xl font-bold mb-3\">{{ item.name }}</h1>\n                        <p>{{ item.description }}</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n","<script setup lang=\"ts\">\ndefineProps<{ cms: any; blogs: BlogNode[] }>()\nconst { data } = await useAsyncGql('getBlogs')\nconst blogs = data.value?.posts?.edges || []\nconst featuredPosts = blogs.filter((blog) => blog.node.blog?.blogContent?.featuredToHome)\n\nfunction convertDate(date: string) {\n    const months = [\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December',\n    ]\n\n    const dateObject = new Date(date)\n    const month = months[dateObject.getMonth()]\n    const day = dateObject.getDate()\n    const year = dateObject.getFullYear()\n\n    return `${month} ${day}, ${year}`\n}\n</script>\n<template>\n    <div class=\"lg:px-20 lg:py-20 px-4 py-10 bg-neutral-100\">\n        <div class=\"flex items-center justify-between mb-16\">\n            <h3 class=\"text-4xl lg:text-h3 playfair\">{{ cms.header }}</h3>\n            <GeneralButton\n                size=\"sm\"\n                variant=\"outline\"\n                >Read All Articles</GeneralButton\n            >\n        </div>\n        <div class=\"grid grid-cols-1 gap-4 lg:grid-cols-3 lg:gap-8\">\n            <nuxt-link\n                :to=\"`blog${blog.node.uri}`\"\n                v-for=\"(blog, index) in featuredPosts.slice(0, 3)\"\n                :key=\"index\"\n                class=\"block\"\n            >\n                <article class=\"overflow-hidden rounded-lg shadow transition hover:shadow-lg\">\n                    <nuxt-img\n                        alt=\"image\"\n                        :src=\"blog.node.blog.blogContent.banner.node.sourceUrl\"\n                        class=\"h-56 w-full object-cover\"\n                    />\n\n                    <div class=\"bg-white p-4 sm:p-6 min-h-[199px]\">\n                        <time\n                            datetime=\"2022-10-10\"\n                            class=\"block text-xs text-gray-500\"\n                        >\n                            {{ convertDate(blog.node.date) }}\n                        </time>\n\n                        <h3 class=\"mt-0.5 text-lg text-gray-900\">{{ blog.node.blog?.blogContent?.title || '' }}</h3>\n\n                        <p class=\"mt-2 text-sm/relaxed text-gray-500 line-clamp-3\">\n                            {{ blog.node.blog?.blogContent?.shortDescription || '' }}\n                        </p>\n                    </div>\n                </article>\n            </nuxt-link>\n        </div>\n    </div>\n</template>\n","<template>\n    <!-- Frame 1 -->\n    <HomeBanner :cms=\"homeData.frame1\" />\n\n    <!-- Frame 2 -->\n    <FeaturedProducts :cms=\"homeData.frame2\" />\n\n    <!-- Frame 3 -->\n    <AboutSection :cms=\"homeData.frame3\" />\n\n    <!-- Frame 4 -->\n    <PackageSection :cms=\"homeData.frame4\" />\n\n    <!-- Frame 5 -->\n    <TestimonySection :cms=\"homeData.frame5\" />\n\n    <!-- frame 6 -->\n    <BlogSection :cms=\"homeData.frame6\" />\n</template>\n\n<script setup lang=\"ts\">\nconst { siteName, description, shortDescription, siteImage } = useAppConfig()\n\nuseSeoMeta({\n    title: `Home`,\n    ogTitle: siteName,\n    description: description,\n    ogDescription: shortDescription,\n    ogImage: siteImage,\n    twitterCard: `summary_large_image`,\n})\n\nconst { data } = await useAsyncGql('getHome')\n\nconst homeData = computed(() => transformToHome(data.value))\n\nconst transformToHome = (data: any) => data?.page?.home || null\n</script>\n\n<style lang=\"css\" scoped>\n.gallery {\n    display: flex;\n    /* outline:1px solid red; */\n}\n\n.left {\n    width: 50%;\n}\n\n.right {\n    height: calc(100vh - 112px);\n    /* outline:1px solid purple; */\n    width: 50%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n}\n\n.desktopContent {\n    margin: auto;\n    width: 80%;\n}\n\n.desktopContentSection {\n    min-height: calc(100vh - 112px);\n    /* outline:1px solid green; */\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n}\n\n.desktopPhotos {\n    width: 40vw;\n    height: 40vw;\n    position: relative;\n    overflow: hidden;\n}\n\n.desktopPhoto {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n}\n\n.mobileContent {\n    display: none;\n    width: 80vw;\n}\n\n.mobilePhoto {\n    width: 80vw;\n    height: 80vw;\n    margin-top: 5em;\n    border-radius: 6vw;\n}\n</style>\n"],"names":["gsap","_withAsyncContext","_b","_a","data"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,SAAK,eAAe,aAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJjCA,WAAK,eAAe,aAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDjC,UAAM,EAAE,KAAK,KAAU,CAAA,QAAA,SAAA,IAAAC,iBAAA,MAAA,YAAY,UAAU,CAAA;AAC7C,UAAM,UAAQ,gBAAK,UAAL,mBAAY,UAAZ,mBAAmB,UAAS,CAAC;AACrC,UAAA,gBAAgB,MAAM,OAAO,CAAC;;AAAS,cAAAC,OAAAC,MAAA,KAAK,KAAK,SAAV,gBAAAA,IAAgB,gBAAhB,gBAAAD,IAA6B;AAAA,KAAc;AAExF,aAAS,YAAY,MAAc;AAC/B,YAAM,SAAS;AAAA,QACX;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAEM,YAAA,aAAa,IAAI,KAAK,IAAI;AAChC,YAAM,QAAQ,OAAO,WAAW,SAAA,CAAU;AACpC,YAAA,MAAM,WAAW,QAAQ;AACzB,YAAA,OAAO,WAAW,YAAY;AAEpC,aAAO,GAAG,KAAK,IAAI,GAAG,KAAK,IAAI;AAAA,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNnC,UAAM,EAAE,UAAU,aAAa,kBAAkB,UAAA,IAAc,aAAa;AAEjE,eAAA;AAAA,MACP,OAAO;AAAA,MACP,SAAS;AAAA,MACT;AAAA,MACA,eAAe;AAAA,MACf,SAAS;AAAA,MACT,aAAa;AAAA,IAAA,CAChB;AAED,UAAM,EAAE,KAAK,KAAU,CAAA,QAAA,SAAA,IAAAD,iBAAA,MAAA,YAAY,SAAS,CAAA;AAE5C,UAAM,WAAW,SAAS,MAAM,gBAAgB,KAAK,KAAK,CAAC;AAE3D,UAAM,kBAAkB,CAACG,UAAcA;;AAAAA,mDAAM,SAANA,mBAAY,SAAQ;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}