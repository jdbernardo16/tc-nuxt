{"version":3,"file":"ProductGrid-GOcFruMy.js","sources":["../../../../../../../woonuxt_base/app/components/shopElements/OrderByDropdown.vue","../../../../../../../woonuxt_base/app/components/filtering/PriceFilter.vue","../../../../../../../woonuxt_base/app/components/filtering/CategoryFilter.vue","../../../../../../../woonuxt_base/app/components/filtering/ColorFilter.vue","../../../../../../../woonuxt_base/app/components/filtering/GlobalFilter.vue","../../../../../../../woonuxt_base/app/components/filtering/OnSaleFilter.vue","../../../../../../../woonuxt_base/app/components/filtering/Filters.vue","../../../../../../../woonuxt_base/app/components/shopElements/ProductResultCount.vue","../../../../../../../woonuxt_base/app/components/filtering/ShowFilterTrigger.vue","../../../../../../../woonuxt_base/app/components/shopElements/Pagination.vue","../../../../../../../woonuxt_base/app/components/shopElements/NoProductsFound.vue","../../../../../../../woonuxt_base/app/components/shopElements/ProductGrid.vue"],"sourcesContent":["<script setup>\nconst { getOrderQuery, setOrderQuery } = await useSorting()\nconst { storeSettings } = useAppConfig()\nconst selectedOrder = ref(getOrderQuery())\nconst orderby = ref(selectedOrder.value.orderBy || 'date')\nconst order = ref(selectedOrder.value.order)\n\n// Update the URL when the checkbox is changed\nwatch([orderby, order], () => {\n    setOrderQuery(orderby.value, order.value)\n})\n</script>\n\n<template>\n    <div class=\"inline-flex ml-auto -space-x-px shadow-sm rounded-m isolate\">\n        <button\n            class=\"relative inline-flex items-center p-2 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-l-md hover:bg-gray-50 focus:z-20\"\n            aria-label=\"Sort\"\n            @click=\"order = order === 'ASC' ? 'DESC' : 'ASC'\"\n        >\n            <Icon\n                name=\"ion:filter-outline\"\n                size=\"18\"\n                :class=\"order === 'ASC' ? 'rotate-180' : ''\"\n                class=\"transition-transform transform transform-origin-center\"\n            />\n        </button>\n        <select\n            id=\"orderby-dropdown\"\n            v-model=\"orderby\"\n            class=\"bg-white rounded-l-none\"\n            aria-label=\"Order by\"\n        >\n            <option value=\"date\">{{ $t('messages.general.latest') }}</option>\n            <option value=\"alphabetically\">{{ $t('messages.general.alphabetically') }}</option>\n            <option value=\"price\">{{ $t('messages.shop.price') }}</option>\n            <option\n                v-if=\"storeSettings.showReviews\"\n                value=\"rating\"\n            >\n                {{ $t('messages.shop.rating') }}\n            </option>\n            <option value=\"discount\">{{ $t('messages.shop.discount') }}</option>\n        </select>\n    </div>\n</template>\n","<script setup>\nimport Slider from '@vueform/slider'\n\nconst { getFilter, setFilter, isFiltersActive } = useFiltering()\nconst runtimeConfig = useRuntimeConfig()\nconst maxPrice = runtimeConfig?.public?.MAX_PRICE || 1000\nconst currencySymbol = runtimeConfig?.public?.CURRENCY_SYMBOL || '$'\n\nconst activeFilters = ref(getFilter('price'))\nconst price = activeFilters.value.length ? ref(activeFilters.value) : ref([0, maxPrice])\nconst isOpen = ref(true)\n\nconst resetSlider = () => {\n    price.value = [0, maxPrice]\n}\n\nconst applyPrice = () => {\n    setFilter('price', price.value)\n}\n\nwatch(isFiltersActive, () => {\n    if (!isFiltersActive.value) resetSlider()\n})\n</script>\n\n<template>\n    <div>\n        <div\n            class=\"cursor-pointer flex font-semibold mt-8 leading-none justify-between items-center\"\n            @click=\"isOpen = !isOpen\"\n        >\n            <span>{{ $t('messages.shop.price') }}</span>\n            <Icon\n                name=\"ion:chevron-down-outline\"\n                class=\"transform\"\n                :class=\"isOpen ? 'rotate-180' : ''\"\n            />\n        </div>\n        <div\n            v-show=\"isOpen\"\n            class=\"mt-3 grid gap-4 grid-cols-2\"\n        >\n            <div class=\"flex relative items-center\">\n                <input\n                    id=\"price-from\"\n                    v-model=\"price[0]\"\n                    class=\"bg-white border rounded-lg max-w-full border-gray-200 leading-none w-auto p-2 pl-6 md:text-sm\"\n                    type=\"number\"\n                    placeholder=\"From\"\n                    min=\"0\"\n                />\n                <label\n                    for=\"price-from\"\n                    class=\"leading-none px-2 text-gray-400 absolute\"\n                    v-html=\"currencySymbol\"\n                />\n            </div>\n            <div class=\"flex relative items-center\">\n                <input\n                    id=\"price-to\"\n                    v-model=\"price[1]\"\n                    class=\"bg-white border rounded-lg max-w-full border-gray-200 leading-none w-auto p-2 pl-6 md:text-sm\"\n                    type=\"number\"\n                    placeholder=\"Up to\"\n                    min=\"1\"\n                />\n                <label\n                    for=\"price-to\"\n                    class=\"leading-none px-2 text-gray-400 absolute\"\n                    v-html=\"currencySymbol\"\n                />\n            </div>\n            <div class=\"mx-1 mt-1 col-span-full\">\n                <Slider\n                    v-model=\"price\"\n                    :tooltips=\"false\"\n                    :min=\"0\"\n                    :max=\"maxPrice\"\n                    ariaLabelledby=\"price-from price-to\"\n                    @update=\"applyPrice\"\n                />\n            </div>\n        </div>\n    </div>\n</template>\n\n<style src=\"@vueform/slider/themes/default.css\"></style>\n","<script setup>\nconst { getFilter, setFilter, isFiltersActive } = useFiltering()\n\nconst props = defineProps({\n    terms: { type: Array, required: true },\n    label: { type: String, default: '' },\n    openByDefault: { type: Boolean, default: true },\n    showCount: { type: Boolean, default: false },\n})\n\nconst isOpen = ref(props.openByDefault)\nconst selectedTerms = ref(getFilter('category') || [])\n\nconst route = useRoute()\nconst categorySlug = route.params.categorySlug\nif (categorySlug) selectedTerms.value = [categorySlug]\n\nwatch(isFiltersActive, () => {\n    // uncheck all checkboxes when filters are cleared\n    if (!isFiltersActive.value) selectedTerms.value = []\n})\n\n// Update the URL when the checkbox is changed\nconst checkboxChanged = () => {\n    setFilter('category', selectedTerms.value)\n}\n</script>\n\n<template>\n    <div v-if=\"terms.length\">\n        <div\n            class=\"cursor-pointer flex font-semibold mt-8 justify-between items-center\"\n            @click=\"isOpen = !isOpen\"\n        >\n            <span>{{ label || $t('messages.shop.category', 2) }}</span>\n            <Icon\n                name=\"ion:chevron-down-outline\"\n                class=\"transform\"\n                :class=\"isOpen ? 'rotate-180' : ''\"\n            />\n        </div>\n        <div\n            v-show=\"isOpen\"\n            class=\"mt-3 mr-1 max-h-[240px] grid gap-1.5 overflow-auto custom-scrollbar\"\n        >\n            <div\n                v-for=\"term in terms\"\n                :key=\"term.slug\"\n                class=\"flex gap-2 items-start\"\n            >\n                <input\n                    :id=\"term.slug\"\n                    v-model=\"selectedTerms\"\n                    type=\"checkbox\"\n                    :value=\"term.slug\"\n                    @change=\"checkboxChanged\"\n                />\n                <label\n                    :for=\"term.slug\"\n                    class=\"cursor-pointer m-0 text-sm flex-1 leading-tight\"\n                >\n                    <span v-html=\"term.name\" />\n                    <small\n                        v-if=\"showCount\"\n                        class=\"ml-1 text-gray-400 tabular-nums\"\n                        aria-hidden=\"true\"\n                        >({{ term.count || 0 }})</small\n                    >\n                </label>\n            </div>\n        </div>\n    </div>\n</template>\n","<script setup lang=\"ts\">\nconst { getFilter, setFilter, isFiltersActive } = useFiltering()\n\nconst { attribute } = defineProps({\n    attribute: { type: Object, required: true },\n})\n\nconst selectedTerms = ref(getFilter(attribute.slug) || [])\nconst filterTitle = ref(attribute.label || attribute.slug)\nconst isOpen = ref(attribute.openByDefault)\n\nwatch(isFiltersActive, () => {\n    // uncheck all checkboxes when filters are cleared\n    if (!isFiltersActive.value) selectedTerms.value = []\n})\n\n// Update the URL when the checkbox is changed\nconst checkboxChanged = () => {\n    setFilter(attribute.slug, selectedTerms.value)\n}\n</script>\n\n<template>\n    <div\n        class=\"cursor-pointer flex font-semibold mt-8 leading-none justify-between items-center\"\n        @click=\"isOpen = !isOpen\"\n    >\n        <span>{{ filterTitle }}</span>\n        <Icon\n            name=\"ion:chevron-down-outline\"\n            class=\"transform\"\n            :class=\"isOpen ? 'rotate-180' : ''\"\n        />\n    </div>\n    <div\n        v-show=\"isOpen\"\n        class=\"mt-3 mr-6 max-h-[240px] grid gap-1.5 swatches overflow-auto custom-scrollbar\"\n    >\n        <div\n            v-for=\"color in attribute.terms\"\n            :key=\"color.slug\"\n            :style=\"{ '--color': color.slug }\"\n            :title=\"color.name\"\n        >\n            <input\n                :id=\"color.slug\"\n                v-model=\"selectedTerms\"\n                class=\"hidden\"\n                type=\"checkbox\"\n                :value=\"color.slug\"\n                @change=\"checkboxChanged\"\n            />\n            <label\n                :for=\"color.slug\"\n                class=\"cursor-pointer m-0\"\n            ></label>\n        </div>\n    </div>\n</template>\n\n<style scoped lang=\"postcss\">\n.swatches {\n    grid-template-columns: repeat(auto-fit, minmax(24px, 1fr));\n}\n\n.swatches label {\n    @apply rounded-md cursor-pointer shadow-sm m-0 mb-1 w-full block relative;\n    background-color: var(--color, #eee);\n    filter: saturate(0.75);\n    aspect-ratio: 1/1;\n    transition: all 0.2s ease;\n}\n\n.swatches label:hover,\n.swatches input:checked + label {\n    filter: saturate(1);\n}\n\n/* tick */\n.swatches input:checked + label::after {\n    content: '';\n    width: 25%;\n    height: 40%;\n    border-right: 2.5px solid #fff;\n    border-bottom: 2.5px solid #fff;\n    position: absolute;\n    top: 45%;\n    left: 50%;\n    transform: translate(-50%, -50%) rotate(45deg);\n}\n\n/* Make tick black if the color is white */\n.swatches input:checked + label[for='white']::after,\n.swatches input:checked + label[for='yellow']::after {\n    border-color: #666;\n}\n</style>\n","<script setup lang=\"ts\">\nconst { getFilter, setFilter, isFiltersActive } = useFiltering()\n\nconst { attribute } = defineProps({\n    attribute: { type: Object, required: true },\n})\n\nconst selectedTerms = ref(getFilter(attribute.slug) || [])\nconst filterTitle = ref(attribute.label || attribute.slug)\nconst isOpen = ref(attribute.openByDefault)\n\nwatch(isFiltersActive, () => {\n    // uncheck all checkboxes when filters are cleared\n    if (!isFiltersActive.value) selectedTerms.value = []\n})\n\n// Update the URL when the checkbox is changed\nconst checkboxChanged = () => {\n    setFilter(attribute.slug, selectedTerms.value)\n}\n</script>\n\n<template>\n    <div\n        class=\"cursor-pointer flex font-semibold mt-8 leading-none justify-between items-center\"\n        @click=\"isOpen = !isOpen\"\n    >\n        <span>{{ filterTitle }}</span>\n        <Icon\n            name=\"ion:chevron-down-outline\"\n            class=\"transform\"\n            :class=\"isOpen ? 'rotate-180' : ''\"\n        />\n    </div>\n    <div\n        v-show=\"isOpen\"\n        class=\"mt-3 mr-1 max-h-[240px] grid gap-1 overflow-auto custom-scrollbar\"\n    >\n        <div\n            v-for=\"term in attribute.terms\"\n            :key=\"term.slug\"\n            class=\"flex gap-2 items-center\"\n        >\n            <input\n                :id=\"term.slug\"\n                v-model=\"selectedTerms\"\n                type=\"checkbox\"\n                :value=\"term.slug\"\n                @change=\"checkboxChanged\"\n            />\n            <label\n                :for=\"term.slug\"\n                class=\"cursor-pointer m-0 text-sm flex items-center flex-wrap\"\n            >\n                <span v-html=\"term.name\" />\n                <small\n                    v-if=\"attribute.showCount\"\n                    class=\"ml-1 text-gray-400 tabular-nums\"\n                    aria-hidden=\"true\"\n                    >({{ term.count || 0 }})</small\n                >\n            </label>\n        </div>\n    </div>\n</template>\n","<script setup>\nconst { getFilter, setFilter, isFiltersActive } = useFiltering()\nconst selectedTerms = ref(getFilter('sale') || [])\n\nconst isOpen = ref(true)\n\nwatch(isFiltersActive, () => {\n    // uncheck all radio boxes when filters are cleared\n    if (!isFiltersActive.value) selectedTerms.value = []\n})\n\nconst checkboxClicked = (e) => {\n    if (selectedTerms.value.length === 0) {\n        selectedTerms.value = [e.target.value]\n        setFilter('sale', [e.target.value])\n    } else {\n        selectedTerms.value = []\n        setFilter('sale', [])\n    }\n}\n</script>\n\n<template>\n    <div>\n        <div\n            class=\"cursor-pointer flex font-semibold mt-8 leading-none justify-between items-center\"\n            @click=\"isOpen = !isOpen\"\n        >\n            <span>Sale Products Only</span>\n            <Icon\n                name=\"ion:chevron-down-outline\"\n                class=\"transform\"\n                :class=\"isOpen ? 'rotate-180' : ''\"\n            />\n        </div>\n        <div\n            v-if=\"isOpen\"\n            class=\"mt-3 mr-1 max-h-[240px] grid gap-1 overflow-auto custom-scrollbar\"\n        >\n            <div class=\"flex gap-2 items-center\">\n                <label\n                    for=\"sale-true\"\n                    class=\"cursor-pointer m-0 text-sm sr-only\"\n                    aria-label=\"Only show products on sale\"\n                >\n                    Only show products on sale</label\n                >\n                <input\n                    id=\"sale-true\"\n                    v-model=\"selectedTerms\"\n                    type=\"checkbox\"\n                    :value=\"true\"\n                    aria-label=\"Sale Products Only\"\n                    @click=\"checkboxClicked\"\n                />\n            </div>\n        </div>\n    </div>\n</template>\n","<script setup lang=\"ts\">\nimport { TaxonomyEnum } from '#woo'\n\nconst { isFiltersActive } = useFiltering()\nconst { removeBodyClass } = useHelpers()\nconst runtimeConfig = useRuntimeConfig()\nconst { storeSettings } = useAppConfig()\n\n// hide-categories prop is used to hide the category filter on the product category page\nconst { hideCategories } = defineProps({ hideCategories: { type: Boolean, default: false } })\n\nconst globalProductAttributes = (runtimeConfig?.public?.GLOBAL_PRODUCT_ATTRIBUTES as WooNuxtFilter[]) || []\nconst taxonomies = globalProductAttributes.map((attr) => attr?.slug?.toUpperCase().replace('_', '')) as TaxonomyEnum[]\nconst { data } = await useAsyncGql('getAllTerms', { taxonomies: [...taxonomies, TaxonomyEnum.PRODUCTCATEGORY] })\nconst terms = data.value?.terms?.nodes || []\n\n// Filter out the product category terms and the global product attributes with their terms\nconst productCategoryTerms = terms.filter((term) => term.taxonomyName === 'product_cat')\n\n// Filter out the color attribute and the rest of the global product attributes\nconst attributesWithTerms = globalProductAttributes.map((attr) => ({\n    ...attr,\n    terms: terms.filter((term) => term.taxonomyName === attr.slug),\n}))\n</script>\n\n<template>\n    <aside id=\"filters\">\n        <OrderByDropdown class=\"block w-full md:hidden\" />\n        <div class=\"relative z-30 grid mb-12 space-y-8 divide-y\">\n            <PriceFilter />\n            <CategoryFilter\n                v-if=\"!hideCategories\"\n                :terms=\"productCategoryTerms\"\n            />\n            <div\n                v-for=\"attribute in attributesWithTerms\"\n                :key=\"attribute.slug\"\n            >\n                <ColorFilter\n                    v-if=\"attribute.slug == 'pa_color' || attribute.slug == 'pa_colour'\"\n                    :attribute\n                />\n                <GlobalFilter\n                    v-else\n                    :attribute\n                />\n            </div>\n            <OnSaleFilter />\n            <LazyStarRatingFilter v-if=\"storeSettings.showReviews\" />\n            <LazyResetFiltersButton v-if=\"isFiltersActive\" />\n        </div>\n    </aside>\n    <div\n        class=\"fixed inset-0 z-50 hidden bg-black opacity-25 filter-overlay\"\n        @click=\"removeBodyClass('show-filters')\"\n    ></div>\n</template>\n\n<style lang=\"postcss\">\n.show-filters .filter-overlay {\n    @apply block;\n}\n.show-filters {\n    overflow: hidden;\n}\n\n#filters {\n    @apply w-[280px];\n\n    & .slider-connect {\n        @apply bg-primary;\n    }\n\n    &::-webkit-scrollbar {\n        display: none;\n    }\n\n    input[type='checkbox'],\n    input[type='radio'] {\n        @apply bg-white border rounded-lg cursor-pointer font-sans outline-none border-gray-300 w-full p-3 transition-all duration-150 appearance-none hover:border-primary;\n\n        width: 1em;\n        height: 1em;\n        position: relative;\n        cursor: pointer;\n        border-radius: 4px;\n        padding: 0;\n    }\n\n    input[type='radio'] {\n        border-radius: 50%;\n    }\n\n    input[type='checkbox']:after,\n    input[type='radio']:after {\n        content: '';\n        display: block;\n        opacity: 0;\n        transition: all 250ms cubic-bezier(0.65, -0.43, 0.4, 1.71);\n    }\n\n    input[type='checkbox']:after {\n        width: 5px;\n        height: 9px;\n        border: 2px solid #fff;\n        border-top: 0;\n        border-left: 0;\n        transform: rotate(0deg) translate(-1px, 1px) scale(0.75);\n        position: absolute;\n        top: 3px;\n        left: 6.5px;\n    }\n\n    input[type='radio']:after {\n        width: 6px;\n        height: 6px;\n        border-radius: 50%;\n        transform: scale(0);\n        position: absolute;\n        background: #fff;\n        top: 4px;\n        left: 4px;\n    }\n\n    input[type='checkbox']:checked:after,\n    input[type='checkbox'] + label,\n    input[type='radio'] + label {\n        @apply cursor-pointer text-gray-600 hover:text-primary;\n    }\n\n    input[type='checkbox']:checked + label,\n    input[type='radio']:checked + label {\n        @apply text-gray-800 hover:text-primary-dark;\n    }\n\n    input[type='checkbox']:checked,\n    input[type='radio']:checked {\n        @apply bg-primary border-0;\n    }\n\n    input[type='checkbox']:checked:after {\n        opacity: 1;\n        transform: rotate(45deg) translate(-1px, 1px) scale(1);\n    }\n\n    input[type='radio']:checked:after {\n        opacity: 1;\n        transform: scale(1);\n    }\n}\n\n.price-input {\n    @apply border rounded-xl outline-none leading-tight w-full p-2 transition-all;\n\n    &.active {\n        @apply border-gray-400 pl-6;\n    }\n}\n\n@media (max-width: 768px) {\n    #filters {\n        @apply bg-white h-full p-8 transform pl-2 transition-all ease-in-out bottom-0 left-4 -translate-x-[110vw] duration-300 overflow-auto fixed;\n\n        box-shadow:\n            -100px 0 0 white,\n            -200px 0 0 white,\n            -300px 0 0 white;\n        z-index: 60;\n    }\n\n    .show-filters #filters {\n        @apply transform-none;\n    }\n}\n</style>\n","<script setup lang=\"ts\">\nconst route = useRoute()\nconst { products } = useProducts()\nconst { productsPerPage } = useHelpers()\nconst page = ref(parseInt(route.params.pageNumber as string) || 1)\n</script>\n\n<template>\n    <div\n        class=\"text-sm font-light\"\n        v-if=\"products.length !== 0\"\n    >\n        <span>{{ $t('messages.shop.productResultCount.showing') + ' ' }}</span>\n        <span class=\"font-normal\">{{ (page - 1) * productsPerPage + 1 + ' ' }}</span>\n        <span>{{ $t('messages.shop.productResultCount.to') + ' ' }}</span>\n        <span class=\"font-normal\">{{ Math.min(page * productsPerPage, products.length) + ' ' }}</span>\n        (<span>{{ $t('messages.shop.productResultCount.of') }}</span>\n        <span class=\"font-normal\">{{ products.length }}</span\n        >)\n    </div>\n</template>\n","<script setup>\nconst { toggleBodyClass, removeBodyClass } = useHelpers()\nconst { isFiltersActive } = await useFiltering()\nonBeforeUnmount(() => {\n    removeBodyClass('show-filters')\n})\n</script>\n\n<template>\n    <div class=\"relative inline-flex -space-x-px shadow-sm rounded-m isolate\">\n        <button\n            class=\"relative inline-flex items-center p-2 text-sm text-gray-500 bg-white border border-gray-300 rounded-md hover:bg-gray-50 focus:z-20\"\n            aria-label=\"Show filters\"\n            @click.prevent=\"toggleBodyClass('show-filters')\"\n            title=\"Show filters\"\n        >\n            <Icon\n                name=\"ion:funnel-outline\"\n                size=\"18\"\n                class=\"transition-transform transform transform-origin-center\"\n            />\n        </button>\n        <span\n            class=\"absolute z-20 w-2.5 h-2.5 rounded-full bg-primary -top-1 -right-1\"\n            v-if=\"isFiltersActive\"\n        />\n    </div>\n</template>\n","<script setup lang=\"ts\">\nconst route = useRoute()\nconst { productsPerPage } = useHelpers()\nconst { products } = useProducts()\n\n// TODO: Refactor all this logic. It's a mess.\nconst currentQuery = computed(() => {\n    const query = route.query\n    const queryKeys = Object.keys(query)\n    let currentQuery = ''\n    if (queryKeys.length > 0) {\n        queryKeys.forEach((key, index) => {\n            currentQuery += index === 0 ? `${key}=${query[key]}` : `&${key}=${query[key]}`\n        })\n    }\n    return decodeURIComponent(currentQuery)\n})\n\nconst page = ref(route.params.pageNumber ? parseInt(route.params.pageNumber as string) : 1)\nconst numberOfPages = computed<number>(() => Math.ceil(products.value.length / productsPerPage || 1))\n\nconst prevSrc = (pageNumber: number) => {\n    if (currentQuery.value === '') {\n        return decodeURIComponent(`/products/page/${pageNumber > 1 ? pageNumber - 1 : pageNumber}`)\n    } else {\n        return decodeURIComponent(\n            pageNumber > 1\n                ? `/products/page/${pageNumber - 1}/?${currentQuery.value}`\n                : `/products/page/${pageNumber}/?${currentQuery.value}`,\n        )\n    }\n}\n\nconst nextSrc = (pageNumber: number) => {\n    if (currentQuery.value === '') {\n        return decodeURIComponent(`/products/page/${pageNumber < numberOfPages.value ? pageNumber + 1 : pageNumber}`)\n    } else {\n        return decodeURIComponent(\n            pageNumber < numberOfPages.value\n                ? `/products/page/${pageNumber + 1}/?${currentQuery.value}`\n                : `/products/page/${pageNumber}/?${currentQuery.value}`,\n        )\n    }\n}\n\nconst numberSrc = (pageNumber: number) => {\n    if (currentQuery.value === '') {\n        return decodeURIComponent(`/products/page/${pageNumber}`)\n    } else {\n        return decodeURIComponent(`/products/page/${pageNumber}/?${currentQuery.value}`)\n    }\n}\n</script>\n\n<template>\n    <div class=\"flex justify-center mt-8 mb-16 col-span-full tabular-nums\">\n        <!-- Pagination -->\n        <nav\n            v-if=\"numberOfPages && numberOfPages > 1\"\n            class=\"inline-flex self-end -space-x-px rounded-md shadow-sm isolate\"\n            aria-label=\"Pagination\"\n        >\n            <!-- PREV -->\n            <NuxtLink\n                :to=\"prevSrc(page)\"\n                class=\"prev\"\n                :disabled=\"page == 1\"\n                :class=\"{ 'cursor-not-allowed': page == 1 }\"\n                :aria-disabled=\"page == 1\"\n                aria-label=\"Previous\"\n            >\n                <Icon\n                    name=\"ion:chevron-back-outline\"\n                    size=\"20\"\n                    class=\"w-5 h-5\"\n                />\n            </NuxtLink>\n\n            <!-- NUMBERS -->\n            <NuxtLink\n                v-for=\"pageNumber in numberOfPages\"\n                :key=\"pageNumber\"\n                :to=\"numberSrc(pageNumber)\"\n                :aria-current=\"pageNumber === page ? 'page' : undefined\"\n                class=\"page-number\"\n            >\n                {{ pageNumber }}\n            </NuxtLink>\n\n            <!-- NEXT -->\n            <NuxtLink\n                :to=\"nextSrc(page)\"\n                class=\"next\"\n                :disabled=\"page === numberOfPages\"\n                :class=\"{ 'cursor-not-allowed': page === numberOfPages }\"\n                :aria-disabled=\"page === numberOfPages\"\n                aria-label=\"Next\"\n            >\n                <Icon\n                    name=\"ion:chevron-forward-outline\"\n                    size=\"20\"\n                    class=\"w-5 h-5\"\n                />\n            </NuxtLink>\n        </nav>\n    </div>\n</template>\n\n<style lang=\"postcss\" scoped>\n.prev,\n.next,\n.page-number {\n    @apply bg-white border font-medium border-gray-300 text-sm p-2 text-gray-500 relative inline-flex items-center hover:bg-gray-50 focus:z-10;\n}\n\n.prev {\n    @apply rounded-l-md;\n}\n\n.next {\n    @apply rounded-r-md;\n}\n\n.page-number {\n    @apply px-3;\n}\n\n.page-number[aria-current='page'] {\n    @apply bg-primary border-primary border bg-opacity-10 text-primary z-10;\n}\n</style>\n","<script setup lang=\"ts\">\nconst { allProducts } = useProducts()\nconst { clearSearchQuery } = useSearching()\nconst { resetFilter } = useFiltering()\n\nconst clearAll = () => {\n    resetFilter()\n    clearSearchQuery()\n}\n</script>\n\n<template>\n    <div class=\"w-full my-16 lg:my-24\">\n        <div class=\"flex flex-col items-center justify-center w-full text-center text-pretty\">\n            <Icon\n                name=\"ion:sad-outline\"\n                size=\"156\"\n                class=\"opacity-25 mb-10\"\n            />\n            <h2 class=\"text-2xl font-bold\">{{ $t('messages.shop.noProductsFound.title') }}</h2>\n            <p class=\"mt-4 max-w-md\">\n                <slot>{{ $t('messages.shop.noProductsFound.subText') }}</slot>\n            </p>\n            <div>\n                <button\n                    v-if=\"allProducts.length\"\n                    class=\"bg-primary rounded-lg font-bold mt-8 text-center text-white text-sm w-full p-2 px-3 inline-block hover:bg-primary-dark\"\n                    :title=\"$t('messages.shop.noProductsFound.clearFiltersAndSearch')\"\n                    aria-label=\"Clear all filters and search\"\n                    @click=\"clearAll\"\n                >\n                    {{ $t('messages.shop.noProductsFound.clearFiltersAndSearch') }}\n                </button>\n            </div>\n        </div>\n    </div>\n</template>\n","<script setup lang=\"ts\">\nconst route = useRoute()\nconst { productsPerPage } = useHelpers()\nconst { products } = useProducts()\nconst page = ref(parseInt(route.params.pageNumber as string) || 1)\nconst productsToShow = computed(() =>\n    products.value.slice((page.value - 1) * productsPerPage, page.value * productsPerPage),\n)\n</script>\n\n<template>\n    <Transition\n        name=\"fade\"\n        mode=\"out-in\"\n    >\n        <section\n            v-if=\"!!products.length\"\n            class=\"relative w-full\"\n        >\n            <TransitionGroup\n                name=\"shrink\"\n                tag=\"div\"\n                mode=\"in-out\"\n                class=\"product-grid\"\n            >\n                <ProductCard\n                    v-for=\"(node, i) in productsToShow\"\n                    :key=\"node.id || i\"\n                    :node\n                    :index=\"i\"\n                />\n            </TransitionGroup>\n            <Pagination />\n        </section>\n        <NoProductsFound v-else />\n    </Transition>\n</template>\n\n<style lang=\"postcss\" scoped>\n.product-grid {\n    @apply my-4 min-h-[600px] grid transition-all gap-8 lg:my-8;\n\n    grid-template-columns: repeat(2, 1fr);\n}\n.product-grid:empty {\n    display: none;\n}\n\n@media (min-width: 768px) {\n    .product-grid {\n        grid-template-columns: repeat(auto-fill, minmax(210px, 1fr));\n    }\n}\n\n.shrink-move {\n    transition: all 400ms;\n}\n\n.shrink-leave-active {\n    transition: transform 300ms;\n    position: absolute;\n    opacity: 0;\n}\n\n.shrink-enter-active {\n    transition:\n        opacity 400ms ease-out 200ms,\n        transform 400ms ease-out;\n    will-change: opacity, transform;\n}\n\n.shrink-enter,\n.shrink-leave-to,\n.shrink-enter-from {\n    opacity: 0;\n    transform: scale(0.75) translateY(25%);\n}\n</style>\n"],"names":["_withAsyncContext","_a","currentQuery"],"mappings":";;;;;;;;;;;AACA,UAAM,EAAE,eAAe,cAAe,KAAS,CAAA,QAAA,SAAA,IAAAA,iBAAA,MAAA,WAAU,CAAC;AAC1D,UAAM,EAAE,cAAe,IAAG,aAAY;AACtC,UAAM,gBAAgB,IAAI,cAAe,CAAA;AACzC,UAAM,UAAU,IAAI,cAAc,MAAM,WAAW,MAAM;AACzD,UAAM,QAAQ,IAAI,cAAc,MAAM,KAAK;AAG3C,UAAM,CAAC,SAAS,KAAK,GAAG,MAAM;AAC1B,oBAAc,QAAQ,OAAO,MAAM,KAAK;AAAA,IAC5C,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPD,UAAM,EAAE,WAAW,WAAW,gBAAe,IAAK,aAAY;AAC9D,UAAM,gBAAgB,iBAAgB;AACtC,UAAM,aAAW,oDAAe,WAAf,mBAAuB,cAAa;AACrD,UAAM,mBAAiB,oDAAe,WAAf,mBAAuB,oBAAmB;AAEjE,UAAM,gBAAgB,IAAI,UAAU,OAAO,CAAC;AAC5C,UAAM,QAAQ,cAAc,MAAM,SAAS,IAAI,cAAc,KAAK,IAAI,IAAI,CAAC,GAAG,QAAQ,CAAC;AACvF,UAAM,SAAS,IAAI,IAAI;AAEvB,UAAM,cAAc,MAAM;AACtB,YAAM,QAAQ,CAAC,GAAG,QAAQ;AAAA,IAC9B;AAEA,UAAM,aAAa,MAAM;AACrB,gBAAU,SAAS,MAAM,KAAK;AAAA,IAClC;AAEA,UAAM,iBAAiB,MAAM;AACzB,UAAI,CAAC,gBAAgB,MAAO,aAAW;AAAA,IAC3C,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBD,UAAM,EAAE,WAAW,WAAW,gBAAe,IAAK,aAAY;AAE9D,UAAM,QAAQ;AAOd,UAAM,SAAS,IAAI,MAAM,aAAa;AACtC,UAAM,gBAAgB,IAAI,UAAU,UAAU,KAAK,CAAE,CAAA;AAErD,UAAM,QAAQ,SAAQ;AACtB,UAAM,eAAe,MAAM,OAAO;AAClC,QAAI,aAAc,eAAc,QAAQ,CAAC,YAAY;AAErD,UAAM,iBAAiB,MAAM;AAEzB,UAAI,CAAC,gBAAgB,MAAO,eAAc,QAAQ,CAAA;AAAA,IACtD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBD,UAAM,EAAE,WAAW,WAAW,gBAAA,IAAoB,aAAa;AAMzD,UAAA,gBAAgB,IAAI,UAAU,QAAA,UAAU,IAAI,KAAK,EAAE;AACzD,UAAM,cAAc,IAAI,QAAA,UAAU,SAAS,QAAA,UAAU,IAAI;AACzD,UAAM,SAAS,IAAI,QAAS,UAAC,aAAa;AAE1C,UAAM,iBAAiB,MAAM;AAEzB,UAAI,CAAC,gBAAgB,MAAO,eAAc,QAAQ,CAAC;AAAA,IAAA,CACtD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbD,UAAM,EAAE,WAAW,WAAW,gBAAA,IAAoB,aAAa;AAMzD,UAAA,gBAAgB,IAAI,UAAU,QAAA,UAAU,IAAI,KAAK,EAAE;AACzD,UAAM,cAAc,IAAI,QAAA,UAAU,SAAS,QAAA,UAAU,IAAI;AACzD,UAAM,SAAS,IAAI,QAAS,UAAC,aAAa;AAE1C,UAAM,iBAAiB,MAAM;AAEzB,UAAI,CAAC,gBAAgB,MAAO,eAAc,QAAQ,CAAC;AAAA,IAAA,CACtD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbD,UAAM,EAAE,WAAW,WAAW,gBAAe,IAAK,aAAY;AAC9D,UAAM,gBAAgB,IAAI,UAAU,MAAM,KAAK,CAAE,CAAA;AAEjD,UAAM,SAAS,IAAI,IAAI;AAEvB,UAAM,iBAAiB,MAAM;AAEzB,UAAI,CAAC,gBAAgB,MAAO,eAAc,QAAQ,CAAA;AAAA,IACtD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNK,UAAA,EAAE,gBAAgB,IAAI,aAAa;AACb,eAAW;AACvC,UAAM,gBAAgB,iBAAiB;AACjC,UAAA,EAAE,cAAc,IAAI,aAAa;AAKvC,UAAM,4BAA2B,oDAAe,WAAf,mBAAuB,8BAAiD,CAAC;AAC1G,UAAM,aAAa,wBAAwB,IAAI,CAAC,SAAS;;AAAA,cAAAC,MAAA,6BAAM,SAAN,gBAAAA,IAAY,cAAc,QAAQ,KAAK;AAAA,KAAG;AAC7F,UAAA,EAAE,UAAS,CAAA,QAAA,SAAA,IAAAD,iBAAA,MAAM,YAAY,eAAe,EAAE,YAAY,CAAC,GAAG,YAAY,aAAa,eAAe,GAAG,CAAA;AAC/G,UAAM,UAAQ,gBAAK,UAAL,mBAAY,UAAZ,mBAAmB,UAAS,CAAC;AAG3C,UAAM,uBAAuB,MAAM,OAAO,CAAC,SAAS,KAAK,iBAAiB,aAAa;AAGvF,UAAM,sBAAsB,wBAAwB,IAAI,CAAC,UAAU;AAAA,MAC/D,GAAG;AAAA,MACH,OAAO,MAAM,OAAO,CAAC,SAAS,KAAK,iBAAiB,KAAK,IAAI;AAAA,IAAA,EAC/D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBF,UAAM,QAAQ,SAAS;AACjB,UAAA,EAAE,SAAS,IAAI,YAAY;AAC3B,UAAA,EAAE,gBAAgB,IAAI,WAAW;AACvC,UAAM,OAAO,IAAI,SAAS,MAAM,OAAO,UAAoB,KAAK,CAAC;;;;;;;;;;;;;;;;;;;;;;ACHpB,eAAU;AACvD,UAAM,EAAE,gBAAiB,KAAG,CAAA,QAAA,SAAA,IAAAA,iBAAA,MAAM,aAAY,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACD/C,UAAM,QAAQ,SAAS;AACjB,UAAA,EAAE,gBAAgB,IAAI,WAAW;AACjC,UAAA,EAAE,SAAS,IAAI,YAAY;AAG3B,UAAA,eAAe,SAAS,MAAM;AAChC,YAAM,QAAQ,MAAM;AACd,YAAA,YAAY,OAAO,KAAK,KAAK;AACnC,UAAIE,gBAAe;AACf,UAAA,UAAU,SAAS,GAAG;AACZ,kBAAA,QAAQ,CAAC,KAAK,UAAU;AAC9BA,2BAAgB,UAAU,IAAI,GAAG,GAAG,IAAI,MAAM,GAAG,CAAC,KAAK,IAAI,GAAG,IAAI,MAAM,GAAG,CAAC;AAAA,QAAA,CAC/E;AAAA,MAAA;AAEL,aAAO,mBAAmBA,aAAY;AAAA,IAAA,CACzC;AAEK,UAAA,OAAO,IAAI,MAAM,OAAO,aAAa,SAAS,MAAM,OAAO,UAAoB,IAAI,CAAC;AACpF,UAAA,gBAAgB,SAAiB,MAAM,KAAK,KAAK,SAAS,MAAM,SAAS,mBAAmB,CAAC,CAAC;AAE9F,UAAA,UAAU,CAAC,eAAuB;AAChC,UAAA,aAAa,UAAU,IAAI;AAC3B,eAAO,mBAAmB,kBAAkB,aAAa,IAAI,aAAa,IAAI,UAAU,EAAE;AAAA,MAAA,OACvF;AACI,eAAA;AAAA,UACH,aAAa,IACP,kBAAkB,aAAa,CAAC,KAAK,aAAa,KAAK,KACvD,kBAAkB,UAAU,KAAK,aAAa,KAAK;AAAA,QAC7D;AAAA,MAAA;AAAA,IAER;AAEM,UAAA,UAAU,CAAC,eAAuB;AAChC,UAAA,aAAa,UAAU,IAAI;AACpB,eAAA,mBAAmB,kBAAkB,aAAa,cAAc,QAAQ,aAAa,IAAI,UAAU,EAAE;AAAA,MAAA,OACzG;AACI,eAAA;AAAA,UACH,aAAa,cAAc,QACrB,kBAAkB,aAAa,CAAC,KAAK,aAAa,KAAK,KACvD,kBAAkB,UAAU,KAAK,aAAa,KAAK;AAAA,QAC7D;AAAA,MAAA;AAAA,IAER;AAEM,UAAA,YAAY,CAAC,eAAuB;AAClC,UAAA,aAAa,UAAU,IAAI;AACpB,eAAA,mBAAmB,kBAAkB,UAAU,EAAE;AAAA,MAAA,OACrD;AACH,eAAO,mBAAmB,kBAAkB,UAAU,KAAK,aAAa,KAAK,EAAE;AAAA,MAAA;AAAA,IAEvF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClDM,UAAA,EAAE,YAAY,IAAI,YAAY;AACP,iBAAa;AAClB,iBAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFrC,UAAM,QAAQ,SAAS;AACjB,UAAA,EAAE,gBAAgB,IAAI,WAAW;AACjC,UAAA,EAAE,SAAS,IAAI,YAAY;AACjC,UAAM,OAAO,IAAI,SAAS,MAAM,OAAO,UAAoB,KAAK,CAAC;AACjE,UAAM,iBAAiB;AAAA,MAAS,MAC5B,SAAS,MAAM,OAAO,KAAK,QAAQ,KAAK,iBAAiB,KAAK,QAAQ,eAAe;AAAA,IACzF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}