import { defineComponent, useSSRContext } from "vue";
import { n as useRuntimeConfig, c as _export_sfc } from "../server.mjs";
import "ofetch";
import "#internal/nuxt/paths";
import "hookable";
import "unctx";
import "h3";
import "unhead";
import "@unhead/shared";
import "vue-router";
import "radix3";
import "defu";
import "cookie-es";
import "destr";
import "ohash";
import "klona";
import "@vue/devtools-api";
import "@iconify/vue";
import "graphql-request";
import "vue/server-renderer";
import "@iconify/utils/lib/css/icon";
import "@heroicons/vue/24/outline";
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "WPAdminLink",
  __ssrInlineRender: true,
  props: {
    link: {}
  },
  setup(__props) {
    var _a, _b, _c, _d;
    const runtimeConfig = useRuntimeConfig();
    const defaultClient = (_c = (_b = (_a = runtimeConfig == null ? void 0 : runtimeConfig.public) == null ? void 0 : _a["graphql-client"]) == null ? void 0 : _b.clients) == null ? void 0 : _c.default;
    const gqlEndpoint = (defaultClient == null ? void 0 : defaultClient.host) ?? null;
    const wpBase = (gqlEndpoint == null ? void 0 : gqlEndpoint.replace("/graphql", "")) ?? null;
    wpBase + __props.link;
    ((_d = __props.link) == null ? void 0 : _d.startsWith("/wp-admin")) || false;
    return (_ctx, _push, _parent, _attrs) => {
    };
  }
});
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("woonuxt_base/app/components/WPAdminLink.vue");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const WPAdminLink = /* @__PURE__ */ Object.assign(_export_sfc(_sfc_main, [["__scopeId", "data-v-473f9e7e"]]), { __name: "WPAdminLink" });
export {
  WPAdminLink as default
};
//# sourceMappingURL=WPAdminLink-BgqDkn54.js.map
