import { _ as __nuxt_component_0, a as __nuxt_component_1, b as _sfc_main$1, c as _sfc_main$2, d as __nuxt_component_4 } from "./ProductGrid-GOcFruMy.js";
import { defineComponent, withAsyncContext, watch, unref, mergeProps, useSSRContext } from "vue";
import { ssrRenderAttrs, ssrRenderComponent } from "vue/server-renderer";
import { v as useProducts, i as useHelpers, o as useAppConfig, d as useRoute, e as useAsyncGql, h as useHead } from "../server.mjs";
import "@vueform/slider";
import "./default-DhvGO-Ho.js";
import "graphql-request";
import "./ProductCard-DSPys-8O.js";
import "./ProductPrice-BLA-t2Nu.js";
import "ofetch";
import "#internal/nuxt/paths";
import "hookable";
import "unctx";
import "h3";
import "unhead";
import "@unhead/shared";
import "vue-router";
import "radix3";
import "defu";
import "cookie-es";
import "destr";
import "ohash";
import "klona";
import "@vue/devtools-api";
import "@iconify/vue";
import "@iconify/utils/lib/css/icon";
import "@heroicons/vue/24/outline";
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "[slug]",
  __ssrInlineRender: true,
  async setup(__props) {
    var _a, _b;
    let __temp, __restore;
    const { setProducts, updateProductList } = useProducts();
    useHelpers();
    const { storeSettings } = useAppConfig();
    const route = useRoute();
    const slug = route.params.slug;
    const { data } = ([__temp, __restore] = withAsyncContext(() => useAsyncGql("getProducts", { slug })), __temp = await __temp, __restore(), __temp);
    const productsInCategory = ((_b = (_a = data.value) == null ? void 0 : _a.products) == null ? void 0 : _b.nodes) || [];
    setProducts(productsInCategory);
    watch(
      () => route.query,
      () => {
        if (route.name !== "product-category-slug") return;
        updateProductList();
      }
    );
    useHead({
      title: "Products",
      meta: [{ hid: "description", name: "description", content: "Products" }]
    });
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Filters = __nuxt_component_0;
      const _component_ProductResultCount = __nuxt_component_1;
      const _component_OrderByDropdown = _sfc_main$1;
      const _component_ShowFilterTrigger = _sfc_main$2;
      const _component_ProductGrid = __nuxt_component_4;
      if (unref(productsInCategory).length) {
        _push(`<div${ssrRenderAttrs(mergeProps({ class: "container flex items-start gap-16" }, _attrs))}>`);
        if (unref(storeSettings).showFilters) {
          _push(ssrRenderComponent(_component_Filters, { "hide-categories": true }, null, _parent));
        } else {
          _push(`<!---->`);
        }
        _push(`<div class="w-full"><div class="flex items-center justify-between w-full gap-4 mt-8 md:gap-8">`);
        _push(ssrRenderComponent(_component_ProductResultCount, null, null, _parent));
        if (unref(storeSettings).showOrderByDropdown) {
          _push(ssrRenderComponent(_component_OrderByDropdown, { class: "hidden md:inline-flex" }, null, _parent));
        } else {
          _push(`<!---->`);
        }
        if (unref(storeSettings).showFilters) {
          _push(ssrRenderComponent(_component_ShowFilterTrigger, { class: "md:hidden" }, null, _parent));
        } else {
          _push(`<!---->`);
        }
        _push(`</div>`);
        _push(ssrRenderComponent(_component_ProductGrid, null, null, _parent));
        _push(`</div></div>`);
      } else {
        _push(`<!---->`);
      }
    };
  }
});
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("woonuxt_base/app/pages/product-category/[slug].vue");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
export {
  _sfc_main as default
};
//# sourceMappingURL=_slug_-BG_vhCG9.js.map
