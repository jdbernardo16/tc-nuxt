{"file":"useWishlist-8cnX3cJ-.js","mappings":";;AAKO,SAAS,cAAc;AAC1B,QAAM,UAAU,SAAoB,YAAY,MAAM,CAAA,CAAE;AAMxD,WAAS,cAAc,MAAqB;AAChC,YAAA,MAAM,KAAK,IAAI;AACvB,iBAAa,QAAQ,YAAY,KAAK,UAAU,QAAQ,KAAK,CAAC;AAAA,EAAA;AAQlE,WAAS,mBAAmB,YAA0B;AAC1C,YAAA,QAAQ,QAAQ,MAAM,OAAO,CAAC,SAAS,KAAK,eAAe,UAAU;AAC7E,iBAAa,QAAQ,YAAY,KAAK,UAAU,QAAQ,KAAK,CAAC;AAAA,EAAA;AAQlE,QAAM,WAAW,CAAC,eACd,aAAa,QAAQ,MAAM,KAAK,CAAC,SAAS,KAAK,eAAe,UAAU,IAAI;AAMhF,QAAM,UAAU,SAAS,MAAM,QAAQ,MAAM,WAAW,CAAC;AAazD,WAAS,gBAAsB;AAC3B,YAAQ,QAAQ,CAAC;AACjB,iBAAa,WAAW,UAAU;AAAA,EAAA;AAOtC,SAAO,EAAE,SAAS,eAAe,oBAAoB,UAAU,SAAS,cAAc;AAC1F;","names":[],"sources":["../../../../../../../woonuxt_base/app/composables/useWishlist.ts"],"sourcesContent":["/**\n * @name useWishlist\n * @description A composable that handles the wishlist in local storage\n */\n\nexport function useWishlist() {\n    const theList = useState<Product[]>('wishlist', () => [])\n    /**\n     * Add an item to the list\n     * @param {Product} item\n     * @example addToWishlist({ databaseId: 123, name: 'My Product' })\n     */\n    function addToWishlist(item: Product): void {\n        theList.value.push(item)\n        localStorage.setItem('wishlist', JSON.stringify(theList.value))\n    }\n\n    /**\n     * Remove an item from the list\n     * @param {number} databaseId\n     * @example removeFromWishlist(123) - Removes the product with the databaseId of 123\n     */\n    function removeFromWishlist(databaseId: number): void {\n        theList.value = theList.value.filter((item) => item.databaseId !== databaseId)\n        localStorage.setItem('wishlist', JSON.stringify(theList.value))\n    }\n\n    /**\n     *  Check if an item is in the list\n     * @param {number} databaseId - The databaseId of the item to check\n     * @returns {boolean} - Returns true if the item is in the list\n     */\n    const isInList = (databaseId?: number) =>\n        databaseId ? theList.value.some((item) => item.databaseId === databaseId) : false\n\n    /**\n     * Check if the list is empty\n     * @returns {boolean} - Returns true if the list is empty\n     */\n    const isEmpty = computed(() => theList.value.length === 0)\n\n    /**\n     * Get the list from local storage\n     */\n    function getFromLocalStorage(): void {\n        const wishlist = localStorage.getItem('wishlist')\n        if (wishlist) theList.value = JSON.parse(wishlist)\n    }\n\n    /**\n     * Clear the list and remove it from local storage\n     */\n    function clearWishlist(): void {\n        theList.value = []\n        localStorage.removeItem('wishlist')\n    }\n\n    onMounted(() => {\n        getFromLocalStorage()\n    })\n\n    return { theList, addToWishlist, removeFromWishlist, isInList, isEmpty, clearWishlist }\n}\n"],"version":3}