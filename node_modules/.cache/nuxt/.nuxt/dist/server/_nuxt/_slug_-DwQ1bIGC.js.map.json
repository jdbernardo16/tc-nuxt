{"file":"_slug_-DwQ1bIGC.js","mappings":"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","names":["_a","_withAsyncContext","_b","variation"],"sources":["../../../../../../nuxt/dist/head/runtime/components.js","../../../../../../../woonuxt_base/app/components/generalElements/SEOHead.vue","../../../../../../../woonuxt_base/app/components/generalElements/Breadcrumb.vue","../../../../../../../woonuxt_base/app/components/productElements/ProductImageGallery.vue","../../../../../../../woonuxt_base/app/components/productElements/AttributeSelections.vue","../../../../../../../woonuxt_base/app/components/productElements/AddToCartButton.vue","../../../../../../../woonuxt_base/app/components/productElements/WishlistButton.vue","../../../../../../../woonuxt_base/app/components/productElements/ShareButton.vue","../../../../../../../woonuxt_base/app/components/productElements/ReviewsScore.vue","../../../../../../../woonuxt_base/app/components/productElements/ProductTabs.vue","../../../../../../../woonuxt_base/app/pages/product/[slug].vue"],"sourcesContent":["import { defineComponent } from \"vue\";\nimport { useHead } from \"@unhead/vue\";\nconst removeUndefinedProps = (props) => {\n  const filteredProps = /* @__PURE__ */ Object.create(null);\n  for (const key in props) {\n    const value = props[key];\n    if (value !== void 0) {\n      filteredProps[key] = value;\n    }\n  }\n  return filteredProps;\n};\nconst setupForUseMeta = (metaFactory, renderChild) => (props, ctx) => {\n  useHead(() => metaFactory({ ...removeUndefinedProps(props), ...ctx.attrs }, ctx));\n  return () => renderChild ? ctx.slots.default?.() : null;\n};\nconst globalProps = {\n  accesskey: String,\n  autocapitalize: String,\n  autofocus: {\n    type: Boolean,\n    default: void 0\n  },\n  class: [String, Object, Array],\n  contenteditable: {\n    type: Boolean,\n    default: void 0\n  },\n  contextmenu: String,\n  dir: String,\n  draggable: {\n    type: Boolean,\n    default: void 0\n  },\n  enterkeyhint: String,\n  exportparts: String,\n  hidden: {\n    type: Boolean,\n    default: void 0\n  },\n  id: String,\n  inputmode: String,\n  is: String,\n  itemid: String,\n  itemprop: String,\n  itemref: String,\n  itemscope: String,\n  itemtype: String,\n  lang: String,\n  nonce: String,\n  part: String,\n  slot: String,\n  spellcheck: {\n    type: Boolean,\n    default: void 0\n  },\n  style: [String, Object, Array],\n  tabindex: String,\n  title: String,\n  translate: String\n};\nexport const NoScript = defineComponent({\n  name: \"NoScript\",\n  inheritAttrs: false,\n  props: {\n    ...globalProps,\n    title: String,\n    body: Boolean,\n    renderPriority: [String, Number]\n  },\n  setup: setupForUseMeta((props, { slots }) => {\n    const noscript = { ...props };\n    const slotVnodes = slots.default?.();\n    const textContent = slotVnodes ? slotVnodes.filter(({ children }) => children).map(({ children }) => children).join(\"\") : \"\";\n    if (textContent) {\n      noscript.children = textContent;\n    }\n    return {\n      noscript: [noscript]\n    };\n  })\n});\nexport const Link = defineComponent({\n  name: \"Link\",\n  inheritAttrs: false,\n  props: {\n    ...globalProps,\n    as: String,\n    crossorigin: String,\n    disabled: Boolean,\n    fetchpriority: String,\n    href: String,\n    hreflang: String,\n    imagesizes: String,\n    imagesrcset: String,\n    integrity: String,\n    media: String,\n    prefetch: {\n      type: Boolean,\n      default: void 0\n    },\n    referrerpolicy: String,\n    rel: String,\n    sizes: String,\n    title: String,\n    type: String,\n    /** @deprecated **/\n    methods: String,\n    /** @deprecated **/\n    target: String,\n    body: Boolean,\n    renderPriority: [String, Number]\n  },\n  setup: setupForUseMeta((link) => ({\n    link: [link]\n  }))\n});\nexport const Base = defineComponent({\n  name: \"Base\",\n  inheritAttrs: false,\n  props: {\n    ...globalProps,\n    href: String,\n    target: String\n  },\n  setup: setupForUseMeta((base) => ({\n    base\n  }))\n});\nexport const Title = defineComponent({\n  name: \"Title\",\n  inheritAttrs: false,\n  setup: setupForUseMeta((_, { slots }) => {\n    if (import.meta.dev) {\n      const defaultSlot = slots.default?.();\n      if (defaultSlot && (defaultSlot.length > 1 || defaultSlot[0] && typeof defaultSlot[0].children !== \"string\")) {\n        console.error(\"<Title> can take only one string in its default slot.\");\n      }\n      return {\n        title: defaultSlot?.[0]?.children || null\n      };\n    }\n    return {\n      title: slots.default?.()?.[0]?.children || null\n    };\n  })\n});\nexport const Meta = defineComponent({\n  name: \"Meta\",\n  inheritAttrs: false,\n  props: {\n    ...globalProps,\n    charset: String,\n    content: String,\n    httpEquiv: String,\n    name: String,\n    body: Boolean,\n    renderPriority: [String, Number]\n  },\n  setup: setupForUseMeta((props) => {\n    const meta = { ...props };\n    if (meta.httpEquiv) {\n      meta[\"http-equiv\"] = meta.httpEquiv;\n      delete meta.httpEquiv;\n    }\n    return {\n      meta: [meta]\n    };\n  })\n});\nexport const Style = defineComponent({\n  name: \"Style\",\n  inheritAttrs: false,\n  props: {\n    ...globalProps,\n    type: String,\n    media: String,\n    nonce: String,\n    title: String,\n    /** @deprecated **/\n    scoped: {\n      type: Boolean,\n      default: void 0\n    },\n    body: Boolean,\n    renderPriority: [String, Number]\n  },\n  setup: setupForUseMeta((props, { slots }) => {\n    const style = { ...props };\n    const textContent = slots.default?.()?.[0]?.children;\n    if (textContent) {\n      if (import.meta.dev && typeof textContent !== \"string\") {\n        console.error(\"<Style> can only take a string in its default slot.\");\n      }\n      style.children = textContent;\n    }\n    return {\n      style: [style]\n    };\n  })\n});\nexport const Head = defineComponent({\n  name: \"Head\",\n  inheritAttrs: false,\n  setup: (_props, ctx) => () => ctx.slots.default?.()\n});\nexport const Html = defineComponent({\n  name: \"Html\",\n  inheritAttrs: false,\n  props: {\n    ...globalProps,\n    manifest: String,\n    version: String,\n    xmlns: String,\n    renderPriority: [String, Number]\n  },\n  setup: setupForUseMeta((htmlAttrs) => ({ htmlAttrs }), true)\n});\nexport const Body = defineComponent({\n  name: \"Body\",\n  inheritAttrs: false,\n  props: {\n    ...globalProps,\n    renderPriority: [String, Number]\n  },\n  setup: setupForUseMeta((bodyAttrs) => ({ bodyAttrs }), true)\n});\n","<script setup lang=\"ts\">\nconst { frontEndUrl, wooNuxtSEO, isDev, stripHtml } = useHelpers()\nconst { path } = useRoute()\nconst { info } = defineProps({ info: { type: Object as PropType<Product>, required: true } })\n\nconst title = info.name\nconst canonical = `${frontEndUrl}${path}`\nconst siteName = process.env.SITE_TITLE ?? 'WooNuxt'\n\nconst img = useImage()\nconst imageURL = info.image?.sourceUrl ?? '/images/placeholder.jpg'\nconst defaultImageSrc = img.getSizes(imageURL, { width: 1200, height: 630 }).src\nconst twitterImageSrc = img.getSizes(imageURL, { width: 1600, height: 900 }).src\n\nconst getFullImageURL = (url: string) => {\n    if (url.startsWith('http')) return url\n    return `${frontEndUrl}${url}`\n}\n\nconst defaultImage = getFullImageURL(defaultImageSrc)\nconst twitterImage = getFullImageURL(twitterImageSrc)\nconst description =\n    info.shortDescription || info.description\n        ? stripHtml(info.shortDescription || '')\n        : stripHtml(info.description || '')\n\nconst facebook = wooNuxtSEO?.find((item) => item.provider === 'facebook') ?? null\nconst twitter = wooNuxtSEO?.find((item) => item.provider === 'twitter') ?? null\n</script>\n\n<template>\n    <Head>\n        <Title>{{ title }}</Title>\n        <Meta\n            v-if=\"description\"\n            name=\"description\"\n            hid=\"description\"\n            :content=\"description\"\n        />\n        <Meta\n            name=\"image\"\n            hid=\"image\"\n            :content=\"defaultImage\"\n        />\n        <Meta\n            property=\"og:site_name\"\n            hid=\"og:site_name\"\n            :content=\"siteName\"\n        />\n        <Meta\n            property=\"og:url\"\n            hid=\"og:url\"\n            :content=\"canonical\"\n        />\n        <Meta\n            v-if=\"info.name\"\n            property=\"og:title\"\n            hid=\"og:title\"\n            :content=\"info.name\"\n        />\n        <Meta\n            v-if=\"description\"\n            property=\"og:description\"\n            hid=\"og:description\"\n            :content=\"description\"\n        />\n        <Meta\n            property=\"og:image\"\n            hid=\"og:image\"\n            :content=\"defaultImage\"\n        />\n        <Meta\n            v-if=\"facebook?.url\"\n            property=\"article:publisher\"\n            hid=\"article:publisher\"\n            :content=\"facebook.url\"\n        />\n        <Meta\n            name=\"twitter:card\"\n            hid=\"twitter:card\"\n            content=\"summary_large_image\"\n        />\n        <Meta\n            v-if=\"twitter?.handle\"\n            name=\"twitter:site\"\n            hid=\"twitter:site\"\n            :content=\"twitter.handle\"\n        />\n        <Meta\n            v-if=\"info.name\"\n            name=\"twitter:title\"\n            hid=\"twitter:title\"\n            :content=\"info.name\"\n        />\n        <Meta\n            v-if=\"description\"\n            name=\"twitter:description\"\n            hid=\"twitter:description\"\n            :content=\"description\"\n        />\n        <Meta\n            name=\"twitter:image\"\n            hid=\"twitter:image\"\n            :content=\"twitterImage\"\n        />\n        <Meta\n            name=\"twitter:url\"\n            hid=\"twitter:url\"\n            :content=\"canonical\"\n        />\n        <Link\n            rel=\"canonical\"\n            hid=\"canonical\"\n            :href=\"canonical\"\n        />\n    </Head>\n</template>\n","<script setup lang=\"ts\">\nconst runtimeConfig = useRuntimeConfig()\n\nconst { product } = defineProps<{ product: Product }>()\n\n// TODO fetch perma link from WP API\nconst productCategoryPermallink = runtimeConfig?.public?.PRODUCT_CATEGORY_PERMALINK || '/product-category/'\nconst primaryCategory = computed(() => product.productCategories?.nodes[0])\nconst format = computed(() => [\n    { name: 'Products', slug: '/products' },\n    {\n        name: primaryCategory.value?.name,\n        slug: `${String(productCategoryPermallink)}${primaryCategory.value?.slug}`,\n    },\n    { name: product.name },\n])\n</script>\n\n<template>\n    <div class=\"flex text-sm leading-none text-gray-400 gap-1 items-center\">\n        <span>\n            <NuxtLink\n                to=\"/\"\n                class=\"hover:text-primary\"\n                >{{ $t('messages.general.home') }}</NuxtLink\n            >\n            <span> /</span>\n        </span>\n        <span\n            v-for=\"(link, i) in format\"\n            :key=\"link.name || i\"\n        >\n            <NuxtLink\n                v-if=\"link.slug\"\n                :to=\"decodeURIComponent(link.slug)\"\n                class=\"hover:text-primary\"\n                >{{ link.name }}</NuxtLink\n            >\n            <span\n                v-else\n                class=\"text-gray-800\"\n                >{{ link.name }}</span\n            >\n            <span v-if=\"i + 1 < format.length\"> /</span>\n        </span>\n    </div>\n</template>\n","<script setup lang=\"ts\">\nconst { FALLBACK_IMG } = useHelpers()\n\nconst props = defineProps({\n    mainImage: { type: Object, required: true },\n    gallery: { type: Object, required: true },\n    node: { type: Object as PropType<Product | Variation>, required: true },\n    activeVariation: { type: Object, required: false },\n})\n\nconst primaryImage = computed(() => ({\n    sourceUrl: props.mainImage.sourceUrl || FALLBACK_IMG,\n    title: props.mainImage.title,\n    altText: props.mainImage.altText,\n    databaseId: props.mainImage.databaseId,\n}))\n\nconst imageToShow = ref(primaryImage.value)\n\nconst galleryImages = computed(() => {\n    // Add the primary image to the start of the gallery and remove duplicates\n    return [primaryImage.value, ...props.gallery.nodes].filter(\n        (img, index, self) => index === self.findIndex((t) => t?.databaseId === img?.databaseId),\n    )\n})\n\nconst changeImage = (image: any) => {\n    if (image) imageToShow.value = image\n}\n\nwatch(\n    () => props.activeVariation,\n    (newVal) => {\n        if (newVal?.image) {\n            const foundImage = galleryImages.value.find((img) => img.databaseId === newVal.image?.databaseId)\n            if (foundImage) imageToShow.value = foundImage\n        }\n    },\n)\n\nconst imgWidth = 640\n</script>\n\n<template>\n    <div>\n        <SaleBadge\n            :node\n            class=\"absolute text-base top-4 right-4\"\n        />\n        <NuxtImg\n            class=\"rounded-xl object-contain w-full min-w-[350px]\"\n            :width=\"imgWidth\"\n            :height=\"imgWidth\"\n            :alt=\"imageToShow.altText || node.name\"\n            :title=\"imageToShow.title || node.name\"\n            :src=\"imageToShow.sourceUrl || FALLBACK_IMG\"\n            fetchpriority=\"high\"\n            placeholder\n            placeholder-class=\"blur-xl\"\n        />\n        <div\n            v-if=\"gallery.nodes.length\"\n            class=\"my-4 gallery-images\"\n        >\n            <NuxtImg\n                v-for=\"galleryImg in galleryImages\"\n                :key=\"galleryImg.databaseId\"\n                class=\"cursor-pointer rounded-xl\"\n                :width=\"imgWidth\"\n                :height=\"imgWidth\"\n                :src=\"galleryImg.sourceUrl\"\n                :alt=\"galleryImg.altText || node.name\"\n                :title=\"galleryImg.title || node.name\"\n                placeholder\n                placeholder-class=\"blur-xl\"\n                loading=\"lazy\"\n                @click.native=\"changeImage(galleryImg)\"\n            />\n        </div>\n    </div>\n</template>\n\n<style scoped>\n.gallery-images {\n    display: flex;\n    overflow: auto;\n    gap: 1rem;\n\n    &::-webkit-scrollbar {\n        display: none;\n    }\n}\n\n.gallery-images img {\n    width: 72px;\n    aspect-ratio: 5/6;\n    object-fit: cover;\n}\n\n@media (min-width: 768px) {\n    .gallery-images {\n        display: grid;\n        grid-template-columns: repeat(auto-fill, minmax(72px, 1fr));\n\n        img {\n            width: 100%;\n        }\n    }\n}\n</style>\n","<script setup lang=\"ts\">\ninterface Props {\n    attributes: any[]\n    defaultAttributes?: { nodes: VariationAttribute[] } | null\n}\n\nconst { attributes, defaultAttributes } = defineProps<Props>()\nconst emit = defineEmits(['attrs-changed'])\n\nconst activeVariations = ref<VariationAttribute[]>([])\n\nconst getSelectedName = (attr: any, activeVariation?: VariationAttribute) => {\n    if (attr?.terms?.nodes && activeVariation) {\n        return attr.terms.nodes.find((node: { slug: string }) => node.slug === activeVariation.value)?.name\n    }\n\n    return activeVariation?.value || ''\n}\n\nconst updateAttrs = () => {\n    const selectedVariations = attributes.map((row): VariationAttribute => {\n        const radioValue = document.querySelector(`.name-${row.name.toLowerCase()}:checked`) as HTMLInputElement\n        const dropdownValue = document.querySelector(`#${row.name}`) as HTMLSelectElement\n        const name = row.name.charAt(0).toLowerCase() + row.name.slice(1)\n        const value = radioValue?.value ?? dropdownValue?.value ?? ''\n        return { name, value }\n    })\n\n    activeVariations.value = selectedVariations\n    emit('attrs-changed', selectedVariations)\n}\n\nconst setDefaultAttributes = () => {\n    if (defaultAttributes?.nodes) {\n        defaultAttributes?.nodes.forEach((attr: VariationAttribute) => {\n            const radio = document.querySelector(\n                `.name-${attr.name?.toLowerCase()}[value=\"${attr.value}\"]`,\n            ) as HTMLInputElement\n            if (radio) radio.checked = true\n            const dropdown = document.querySelector(`#${attr.name}`) as HTMLSelectElement\n            if (dropdown) dropdown.value = attr.value || ''\n        })\n    }\n}\n\nconst className = (name: string) => `name-${name.toLowerCase()}`\n\nonBeforeMount(() => {\n    setDefaultAttributes()\n    updateAttrs()\n})\n</script>\n\n<template>\n    <div\n        class=\"flex flex-col gap-1 justify-between\"\n        v-if=\"attributes\"\n    >\n        <div\n            v-for=\"(attr, i) in attributes\"\n            :key=\"i\"\n            class=\"flex flex-wrap py-2 relative justify-between\"\n        >\n            <!-- LOCAL -->\n            <div\n                v-if=\"attr.scope == 'LOCAL'\"\n                class=\"grid gap-2\"\n            >\n                <div class=\"text-sm\">\n                    {{ attr.label }}\n                    <span\n                        v-if=\"activeVariations.length && activeVariations[i]\"\n                        class=\"text-gray-400\"\n                        >: {{ getSelectedName(attr, activeVariations[i]) }}</span\n                    >\n                </div>\n                <div class=\"flex gap-2\">\n                    <span\n                        v-for=\"(option, index) in attr.options\"\n                        :key=\"index\"\n                    >\n                        <label :for=\"`${option}_${index}`\">\n                            <input\n                                :id=\"`${option}_${index}`\"\n                                :ref=\"attr.name\"\n                                class=\"hidden\"\n                                :checked=\"index == 0\"\n                                type=\"radio\"\n                                :class=\"`name-${attr.name.toLowerCase()}`\"\n                                :name=\"attr.name\"\n                                :value=\"option\"\n                                @change=\"updateAttrs\"\n                            />\n                            <span\n                                class=\"radio-button\"\n                                :class=\"`picker-${option}`\"\n                                :title=\"`${attr.name}: ${option}`\"\n                                >{{ option }}</span\n                            >\n                        </label>\n                    </span>\n                </div>\n            </div>\n\n            <!-- COLOR SWATCHES -->\n            <div\n                v-else-if=\"attr.name == 'pa_color' || attr.name == 'color'\"\n                class=\"grid gap-2\"\n            >\n                <div class=\"text-sm\">\n                    {{ $t('messages.general.color') }}\n                    <span\n                        v-if=\"activeVariations.length\"\n                        class=\"text-gray-400\"\n                        >{{ getSelectedName(attr, activeVariations[i]) }}</span\n                    >\n                </div>\n                <div class=\"flex gap-2\">\n                    <span\n                        v-for=\"(term, termIndex) in attr.terms.nodes\"\n                        :key=\"termIndex\"\n                    >\n                        <Tooltip :text=\"term.name\">\n                            <label :for=\"`${term.slug}_${termIndex}`\">\n                                <input\n                                    :id=\"`${term.slug}_${termIndex}`\"\n                                    :ref=\"attr.name\"\n                                    class=\"hidden\"\n                                    :checked=\"termIndex == 0\"\n                                    type=\"radio\"\n                                    :class=\"className(attr.name)\"\n                                    :name=\"attr.name\"\n                                    :value=\"term.slug\"\n                                    @change=\"updateAttrs\"\n                                />\n                                <span\n                                    class=\"color-button\"\n                                    :class=\"`color-${term.slug}`\"\n                                    :title=\"`${attr.name}: ${term}`\"\n                                ></span>\n                            </label>\n                        </Tooltip>\n                    </span>\n                </div>\n            </div>\n\n            <!-- DROPDOWN -->\n            <div\n                v-else-if=\"attr.terms.nodes && attr.terms.nodes?.length > 8\"\n                class=\"grid gap-2\"\n            >\n                <div class=\"text-sm\">\n                    {{ attr.label }}\n                    <span\n                        v-if=\"activeVariations.length\"\n                        class=\"text-gray-400\"\n                        >{{ getSelectedName(attr, activeVariations[i]) }}</span\n                    >\n                </div>\n                <select\n                    :id=\"attr.name\"\n                    :ref=\"attr.name\"\n                    :name=\"attr.name\"\n                    required\n                    class=\"border-white shadow\"\n                    @change=\"updateAttrs\"\n                >\n                    <option\n                        disabled\n                        hidden\n                    >\n                        {{ $t('messages.general.choose') }} {{ decodeURIComponent(attr.label) }}\n                    </option>\n                    <option\n                        v-for=\"(term, dropdownIndex) in attr.terms.nodes\"\n                        :key=\"dropdownIndex\"\n                        :value=\"term.slug\"\n                        v-html=\"term.name\"\n                        :selected=\"dropdownIndex == 0\"\n                    />\n                </select>\n            </div>\n\n            <!-- CHECKBOXES -->\n            <div\n                v-else\n                class=\"grid gap-2\"\n            >\n                <div class=\"text-sm\">\n                    {{ attr.label }}\n                    <span\n                        v-if=\"activeVariations.length\"\n                        class=\"text-gray-400\"\n                        >: {{ getSelectedName(attr, activeVariations[i]) }}</span\n                    >\n                </div>\n                <div class=\"flex gap-2\">\n                    <span\n                        v-for=\"(term, index) in attr.terms.nodes\"\n                        :key=\"index\"\n                    >\n                        <label :for=\"`${term.slug}_${index}`\">\n                            <input\n                                :id=\"`${term.slug}_${index}`\"\n                                :ref=\"attr.name\"\n                                class=\"hidden\"\n                                :checked=\"index == 0\"\n                                type=\"radio\"\n                                :class=\"className(attr.name)\"\n                                :name=\"attr.name\"\n                                :value=\"term.slug\"\n                                @change=\"updateAttrs\"\n                            />\n                            <span\n                                class=\"radio-button\"\n                                :class=\"`picker-${term.slug}`\"\n                                :title=\"`${attr.name}: ${term.slug}`\"\n                                >{{ term.name }}</span\n                            >\n                        </label>\n                    </span>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<style lang=\"postcss\">\n.radio-button {\n    @apply border-transparent border-white rounded-lg cursor-pointer outline bg-gray-50 border-2 text-sm text-center outline-2 outline-gray-100 py-1.5 px-3 transition-all text-gray-800 inline-block hover:outline-gray-500;\n}\n\n.color-button {\n    @apply border-transparent border-white cursor-pointer outline bg-gray-50 border-2 rounded-2xl text-sm text-center outline-2 outline-gray-100 transition-all text-gray-800 inline-block hover:outline-gray-500;\n    width: 2rem;\n    height: 2rem;\n}\n\n.color-green {\n    @apply bg-green-500;\n}\n\n.color-blue {\n    @apply bg-blue-500;\n}\n\n.color-red {\n    @apply bg-red-500;\n}\n\n.color-yellow {\n    @apply bg-yellow-500;\n}\n\n.color-orange {\n    @apply bg-orange-500;\n}\n\n.color-purple {\n    @apply bg-purple-500;\n}\n\n.color-black {\n    @apply bg-black;\n}\n\ninput[type='radio']:checked ~ span {\n    @apply outline outline-2 outline-gray-500;\n}\n</style>\n","<script setup>\nconst { cart } = useCart()\nconst props = defineProps({\n    disabled: { type: Boolean, default: false },\n})\nconst isLoading = ref(false)\nconst { t } = useI18n()\nconst addToCartButtonText = computed(() => (isLoading.value ? t('messages.shop.adding') : t('messages.shop.addToCart')))\n\n// stop loading when cart is updated\nwatch(cart, (val) => {\n    isLoading.value = false\n})\n</script>\n\n<template>\n    <button\n        type=\"submit\"\n        class=\"rounded-lg flex font-bold bg-gray-800 text-white text-center min-w-[150px] p-2.5 gap-4 items-center justify-center focus:outline-none\"\n        :class=\"{ disabled: disabled }\"\n        :disabled=\"disabled\"\n        @click=\"isLoading = true\"\n    >\n        <span>{{ addToCartButtonText }}</span>\n        <LoadingIcon\n            v-if=\"isLoading\"\n            stroke=\"4\"\n            size=\"12\"\n            color=\"#fff\"\n        />\n    </button>\n</template>\n\n<style lang=\"postcss\" scoped>\nbutton {\n    outline: none !important;\n    transition: all 150ms ease-in;\n}\n\nbutton.disabled {\n    @apply cursor-not-allowed bg-gray-400;\n}\n</style>\n","<script setup lang=\"ts\">\nconst { addToWishlist, removeFromWishlist, isInList } = useWishlist()\n\nconst { product } = defineProps<{ product: Product }>()\n\nconst isWishlisted = computed(() => (product.databaseId ? isInList(product.databaseId) : false))\n\nconst toggleWishlist = () =>\n    isWishlisted.value && product.databaseId ? removeFromWishlist(product.databaseId) : addToWishlist(product)\n</script>\n\n<template>\n    <button\n        type=\"button\"\n        class=\"cursor-pointer flex mt-4 text-sm text-gray-400 gap-2 items-center\"\n        @click=\"toggleWishlist\"\n    >\n        <Icon\n            v-if=\"isWishlisted\"\n            name=\"ion:heart\"\n            size=\"18\"\n            class=\"text-red-400\"\n        />\n        <Icon\n            v-else\n            name=\"ion:heart-outline\"\n            size=\"18\"\n        />\n        <span>{{ isWishlisted ? $t('messages.shop.wishlistRemove') : $t('messages.shop.wishlistAdd') }}</span>\n    </button>\n</template>\n","<script setup lang=\"ts\">\nconst props = defineProps({\n    product: { type: Object, required: true },\n})\n\nconst isOpen = ref(false)\n\nconst twitterUrl = computed(\n    () => `https://twitter.com/intent/tweet?text=${props.product.name}&url=${window.location.href}`,\n)\nconst facebookUrl = computed(() => `https://www.facebook.com/sharer/sharer.php?u=${window.location.href}`)\nconst pinterestUrl = computed(\n    () =>\n        `https://pinterest.com/pin/create/button/?url=${window.location.href}&media=${props.product.image.sourceUrl}&description=${props.product.name}`,\n)\n\nconst showShare = () => {\n    isOpen.value = true\n}\n</script>\n\n<template>\n    <Transition\n        name=\"fade\"\n        mode=\"out-in\"\n    >\n        <button\n            type=\"button\"\n            v-if=\"!isOpen\"\n            class=\"flex items-center gap-2 mt-4 text-sm text-gray-400 cursor-pointer\"\n            @click=\"showShare\"\n        >\n            <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 512 512\"\n                width=\"18\"\n                height=\"18\"\n            >\n                <circle\n                    cx=\"128\"\n                    cy=\"256\"\n                    r=\"48\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-width=\"32\"\n                />\n                <circle\n                    cx=\"384\"\n                    cy=\"112\"\n                    r=\"48\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-width=\"32\"\n                />\n                <circle\n                    cx=\"384\"\n                    cy=\"400\"\n                    r=\"48\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-width=\"32\"\n                />\n                <path\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-width=\"32\"\n                    d=\"M169.83 279.53l172.34 96.94M342.17 135.53l-172.34 96.94\"\n                />\n            </svg>\n            <span>{{ $t('messages.general.share') }}</span>\n        </button>\n        <div\n            v-else\n            class=\"flex items-center gap-2 mt-4 text-sm text-gray-400 cursor-pointer\"\n        >\n            <!-- Twitter -->\n            <a\n                :href=\"twitterUrl\"\n                target=\"_blank\"\n                title=\"Share on Twitter\"\n            >\n                <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 512 512\"\n                    width=\"18\"\n                    height=\"18\"\n                    fill=\"currentColor\"\n                >\n                    <path\n                        d=\"M496 109.5a201.8 201.8 0 01-56.55 15.3 97.51 97.51 0 0043.33-53.6 197.74 197.74 0 01-62.56 23.5A99.14 99.14 0 00348.31 64c-54.42 0-98.46 43.4-98.46 96.9a93.21 93.21 0 002.54 22.1 280.7 280.7 0 01-203-101.3A95.69 95.69 0 0036 130.4c0 33.6 17.53 63.3 44 80.7A97.5 97.5 0 0135.22 199v1.2c0 47 34 86.1 79 95a100.76 100.76 0 01-25.94 3.4 94.38 94.38 0 01-18.51-1.8c12.51 38.5 48.92 66.5 92.05 67.3A199.59 199.59 0 0139.5 405.6a203 203 0 01-23.5-1.4A278.68 278.68 0 00166.74 448c181.36 0 280.44-147.7 280.44-275.8 0-4.2-.11-8.4-.31-12.5A198.48 198.48 0 00496 109.5z\"\n                    />\n                </svg>\n            </a>\n            <!-- Facebook -->\n            <a\n                :href=\"facebookUrl\"\n                target=\"_blank\"\n                title=\"Share on Facebook\"\n            >\n                <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 512 512\"\n                    width=\"18\"\n                    height=\"18\"\n                    fill=\"currentColor\"\n                >\n                    <path\n                        d=\"M480 257.35c0-123.7-100.3-224-224-224s-224 100.3-224 224c0 111.8 81.9 204.47 189 221.29V322.12h-56.89v-64.77H221V208c0-56.13 33.45-87.16 84.61-87.16 24.51 0 50.15 4.38 50.15 4.38v55.13H327.5c-27.81 0-36.51 17.26-36.51 35v42h62.12l-9.92 64.77H291v156.54c107.1-16.81 189-109.48 189-221.31z\"\n                        fill-rule=\"evenodd\"\n                    />\n                </svg>\n            </a>\n            <!-- Pinterest -->\n            <a\n                :href=\"pinterestUrl\"\n                target=\"_blank\"\n                title=\"Share on Pinterest\"\n            >\n                <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 512 512\"\n                    width=\"18\"\n                    height=\"18\"\n                    fill=\"currentColor\"\n                >\n                    <path\n                        d=\"M256.05 32c-123.7 0-224 100.3-224 224 0 91.7 55.2 170.5 134.1 205.2-.6-15.6-.1-34.4 3.9-51.4 4.3-18.2 28.8-122.1 28.8-122.1s-7.2-14.3-7.2-35.4c0-33.2 19.2-58 43.2-58 20.4 0 30.2 15.3 30.2 33.6 0 20.5-13.1 51.1-19.8 79.5-5.6 23.8 11.9 43.1 35.4 43.1 42.4 0 71-54.5 71-119.1 0-49.1-33.1-85.8-93.2-85.8-67.9 0-110.3 50.7-110.3 107.3 0 19.5 5.8 33.3 14.8 43.9 4.1 4.9 4.7 6.9 3.2 12.5-1.1 4.1-3.5 14-4.6 18-1.5 5.7-6.1 7.7-11.2 5.6-31.3-12.8-45.9-47-45.9-85.6 0-63.6 53.7-139.9 160.1-139.9 85.5 0 141.8 61.9 141.8 128.3 0 87.9-48.9 153.5-120.9 153.5-24.2 0-46.9-13.1-54.7-27.9 0 0-13 51.6-15.8 61.6-4.7 17.3-14 34.5-22.5 48a225.13 225.13 0 0063.5 9.2c123.7 0 224-100.3 224-224S379.75 32 256.05 32z\"\n                    />\n                </svg>\n            </a>\n        </div>\n    </Transition>\n</template>\n","<script setup>\nconst props = defineProps({\n    reviews: { type: Object, default: null },\n    productId: { type: Number, default: null },\n    size: { type: Number, default: 21 },\n})\n\nconst numberAndPercentageOfEachRating = computed(() => {\n    const ratings = [0, 0, 0, 0, 0]\n    props.reviews.edges.forEach((review) => {\n        ratings[review.rating - 1] += 1\n    })\n    const total = ratings.reduce((a, b) => a + b, 0)\n    return ratings\n        .map((count, index) => {\n            const percentage = (count / total) * 100\n            return { count, percentage, rating: index + 1 }\n        })\n        .reverse()\n})\n\nconst show = ref(false)\nconst hovered = ref(0)\nconst rating = ref(null)\nconst content = ref(null)\nconst authorEmail = ref(null)\nconst errorMessage = ref('')\nconst successMessage = ref('')\nconst isPending = ref(false)\n\nfunction setHovered(i) {\n    hovered.value = i\n}\n\nfunction resetHovered() {\n    hovered.value = 0\n}\n\nasync function addComment() {\n    const variables = {\n        commentOn: props.productId,\n        author: authorEmail.value.split('@')[0],\n        content: content.value,\n        rating: rating.value,\n        authorEmail: authorEmail.value,\n    }\n    try {\n        isPending.value = true\n        await GqlWriteReview(variables)\n        successMessage.value = 'Your review is awaiting approval'\n        setTimeout(() => {\n            successMessage.value = ''\n            show.value = false\n        }, 4000)\n    } catch (error) {\n        errorMessage.value = error?.gqlErrors?.[0].message\n        setTimeout(() => {\n            errorMessage.value = ''\n        }, 5000)\n    } finally {\n        isPending.value = false\n    }\n}\n</script>\n\n<template>\n    <div>\n        <h4\n            v-if=\"reviews.edges.length\"\n            class=\"font-semibold text-2xl text-gray-900\"\n        >\n            {{ $t('messages.shop.customerReviews') }}\n        </h4>\n        <h4\n            v-else\n            class=\"font-semibold text-2xl text-gray-900\"\n        >\n            {{ $t('messages.shop.noReviews') }}\n        </h4>\n        <div\n            v-if=\"reviews.edges.length\"\n            class=\"my-2\"\n        >\n            <StarRating\n                :rating=\"reviews.averageRating\"\n                :hide-count=\"true\"\n                class=\"text-sm mr-2\"\n            />\n            <span class=\"text-sm\">\n                {{ $t('messages.general.basedOn') }} {{ reviews.edges.length }} {{ $t('messages.shop.reviews') }}</span\n            >\n        </div>\n        <div class=\"my-4 bars\">\n            <div\n                v-for=\"rating in numberAndPercentageOfEachRating\"\n                :key=\"rating\"\n                class=\"flex gap-4 items-center\"\n            >\n                <div class=\"flex text-sm gap-1 items-center\">\n                    {{ rating.rating }}\n                    <Icon\n                        class=\"text-yellow-400\"\n                        name=\"ion:star\"\n                    />\n                </div>\n                <div class=\"flex-1 relative\">\n                    <div class=\"rounded-full bg-gray-200 h-2.5 w-full\"></div>\n                    <div\n                        class=\"rounded-full bg-yellow-400 h-2.5 top-0 left-0 absolute\"\n                        :style=\"{ width: rating.percentage + '%' }\"\n                    ></div>\n                </div>\n            </div>\n        </div>\n        <div class=\"mt-10 text-xl mb-2 text-gray-900\">Share your thoughts</div>\n        <div class=\"text-sm mb-4\">If you have used this product, we would love to hear about your experience.</div>\n        <button\n            @click=\"show = !show\"\n            class=\"border rounded-lg text-center w-full p-2\"\n        >\n            {{ show ? $t('messages.shop.close') : $t('messages.shop.writeReview') }}\n        </button>\n        <transition\n            class=\"ease-in-out transform transition-all\"\n            name=\"scale-y\"\n        >\n            <form\n                v-if=\"show\"\n                @submit.prevent=\"addComment\"\n                class=\"writeReview\"\n            >\n                <div class=\"w-full text-gray-500\">\n                    <div class=\"p-5 mt-3 grid gap-2 border rounded-lg\">\n                        <div class=\"block text-center mb-1.5\">\n                            <label class=\"text-center text-sm block relative m-auto\"\n                                >{{ $t('messages.shop.rateReview') }} <span class=\"text-red-500\">*</span></label\n                            >\n                            <div class=\"gap-1 flex justify-center mt-2 relative\">\n                                <label\n                                    v-for=\"i in 5\"\n                                    :key=\"i\"\n                                    class=\"grid p-1 rounded\"\n                                    :class=\"rating < i && i > hovered ? 'disable-star' : 'checked-star'\"\n                                    @mouseover=\"setHovered(i)\"\n                                    @mouseout=\"resetHovered\"\n                                >\n                                    <input\n                                        type=\"radio\"\n                                        class=\"overflow-hidden appearance-none opacity-0 absolute\"\n                                        name=\"rating\"\n                                        :value=\"i\"\n                                        v-model=\"rating\"\n                                        required\n                                    />\n                                    <Icon\n                                        name=\"ion:star\"\n                                        :size=\"size + ''\"\n                                    />\n                                </label>\n                            </div>\n                        </div>\n                        <div class=\"w-full col-span-full\">\n                            <label\n                                for=\"content\"\n                                class=\"text-sm mb-0.5\"\n                                >{{ $t('messages.shop.rateContent') }} <span class=\"text-red-500\">*</span></label\n                            >\n                            <textarea\n                                class=\"w-full\"\n                                id=\"content\"\n                                placeholder=\"Great Quality\"\n                                v-model=\"content\"\n                                required\n                            ></textarea>\n                        </div>\n                        <div class=\"w-full col-span-full\">\n                            <label\n                                for=\"author\"\n                                class=\"text-sm mb-0.5\"\n                                >{{ $t('messages.shop.rateEmail') }} <span class=\"text-red-500\">*</span></label\n                            >\n                            <input\n                                class=\"w-full\"\n                                id=\"author\"\n                                placeholder=\"example@example.com\"\n                                type=\"email\"\n                                pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n                                v-model=\"authorEmail\"\n                                required\n                            />\n                        </div>\n                        <Transition\n                            name=\"scale-y\"\n                            mode=\"out-in\"\n                        >\n                            <div\n                                v-if=\"errorMessage\"\n                                class=\"my-4 text-sm text-red-500\"\n                                v-html=\"errorMessage\"\n                            ></div>\n                        </Transition>\n                        <Transition\n                            name=\"scale-y\"\n                            mode=\"out-in\"\n                        >\n                            <div\n                                v-if=\"successMessage\"\n                                class=\"my-4 text-sm text-green-500\"\n                                v-html=\"successMessage\"\n                            ></div>\n                        </Transition>\n                        <div class=\"w-full col-span-full text-center mt-3\">\n                            <button\n                                class=\"flex gap-4 justify-center items-center transition font-semibold rounded-md w-full p-2 bg-amber-300 text-amber-900 hover:bg-amber-400\"\n                                type=\"submit\"\n                            >\n                                <LoadingIcon\n                                    v-if=\"isPending\"\n                                    stroke=\"4\"\n                                    size=\"16\"\n                                    color=\"#78350F\"\n                                />\n                                <span>{{ $t('messages.shop.submit') }}</span>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </transition>\n    </div>\n</template>\n\n<style lang=\"postcss\" scoped>\n.disable-star {\n    @apply bg-white shadow-sm text-gray-300 border border-gray-300;\n    transition: 0.15s ease-in-out;\n}\n.checked-star {\n    @apply text-amber-400 bg-amber-50 border border-amber-400;\n    transition: 0.15s ease-in-out;\n    box-shadow: 0 0px 4px 0 rgb(249 191 59 / 21%);\n}\n.writeReview input,\n.writeReview textarea {\n    @apply bg-white border rounded-md outline-none border-gray-300 shadow-sm w-full py-2 px-4;\n}\n</style>\n","<script setup lang=\"ts\">\nconst { product } = defineProps({\n    product: { type: Object as PropType<Product>, required: true },\n})\nconst { storeSettings } = useAppConfig()\n\nconst initialTab = product.description ? 0 : 1\nconst show = ref(initialTab)\n</script>\n\n<template>\n    <div>\n        <nav class=\"border-b flex gap-8 tabs\">\n            <button\n                v-if=\"product.description\"\n                type=\"button\"\n                :class=\"show === 0 ? 'active' : ''\"\n                @click.prevent=\"show = 0\"\n            >\n                {{ $t('messages.shop.productDescription') }}\n            </button>\n            <button\n                v-if=\"storeSettings.showReviews\"\n                type=\"button\"\n                :class=\"show === 1 ? 'active' : ''\"\n                @click.prevent=\"show = 1\"\n            >\n                {{ $t('messages.shop.reviews') }} ({{ product.reviewCount }})\n            </button>\n        </nav>\n        <div class=\"tab-contents\">\n            <div\n                v-if=\"show === 0 && product.description\"\n                class=\"font-light mt-8 prose\"\n                v-html=\"product.description\"\n            />\n            <ProductReviews\n                v-if=\"show === 1\"\n                :product=\"product\"\n            />\n        </div>\n    </div>\n</template>\n\n<style lang=\"postcss\" scoped>\n.tabs button {\n    @apply border-transparent border-b-2 text-lg pb-8;\n    margin-bottom: -1px;\n}\n\n.tabs button.active {\n    @apply border-primary text-primary;\n}\n</style>\n","<script lang=\"ts\" setup>\nimport { StockStatusEnum, ProductTypesEnum, type AddToCartInput } from '#woo'\n\nconst route = useRoute()\nconst { storeSettings } = useAppConfig()\nconst { arraysEqual, formatArray, checkForVariationTypeOfAny } = useHelpers()\nconst { addToCart, isUpdatingCart } = useCart()\nconst { t } = useI18n()\nconst slug = route.params.slug as string\n\nconst { data } = await useAsyncGql('getProduct', { slug })\nif (!data.value?.product) {\n    throw showError({ statusCode: 404, statusMessage: t('messages.shop.productNotFound') })\n}\n\nconst product = ref<Product>(data?.value?.product)\nconst quantity = ref<number>(1)\nconst activeVariation = ref<Variation | null>(null)\nconst variation = ref<VariationAttribute[]>([])\nconst indexOfTypeAny = computed<number[]>(() => checkForVariationTypeOfAny(product.value))\nconst attrValues = ref()\nconst isSimpleProduct = computed<boolean>(() => product.value?.type === ProductTypesEnum.SIMPLE)\nconst isVariableProduct = computed<boolean>(() => product.value?.type === ProductTypesEnum.VARIABLE)\nconst isExternalProduct = computed<boolean>(() => product.value?.type === ProductTypesEnum.EXTERNAL)\n\nconst type = computed(() => activeVariation.value || product.value)\nconst selectProductInput = computed<any>(() => ({\n    productId: type.value?.databaseId,\n    quantity: quantity.value,\n})) as ComputedRef<AddToCartInput>\n\nconst mergeLiveStockStatus = (payload: Product): void => {\n    product.value.stockStatus = payload.stockStatus ?? product.value?.stockStatus\n\n    payload.variations?.nodes?.forEach((variation: Variation, index: number) => {\n        if (product.value?.variations?.nodes[index]) {\n            product.value.variations.nodes[index].stockStatus = variation.stockStatus\n        }\n    })\n}\n\nonMounted(async () => {\n    try {\n        const { product } = await GqlGetStockStatus({ slug })\n        if (product) mergeLiveStockStatus(product as Product)\n    } catch (error: any) {\n        const errorMessage = error?.gqlErrors?.[0].message\n        if (errorMessage) console.error(errorMessage)\n    }\n})\n\nconst updateSelectedVariations = (variations: VariationAttribute[]): void => {\n    if (!product.value.variations) return\n\n    attrValues.value = variations.map((el) => ({ attributeName: el.name, attributeValue: el.value }))\n    const clonedVariations = JSON.parse(JSON.stringify(variations))\n    const getActiveVariation = product.value.variations?.nodes.filter((variation: any) => {\n        // If there is any variation of type ANY set the value to ''\n        if (variation.attributes) {\n            // Set the value of the variation of type ANY to ''\n            indexOfTypeAny.value.forEach((index) => (clonedVariations[index].value = ''))\n\n            return arraysEqual(formatArray(variation.attributes.nodes), formatArray(clonedVariations))\n        }\n    })\n\n    if (getActiveVariation[0]) activeVariation.value = getActiveVariation[0]\n    selectProductInput.value.variationId = activeVariation.value?.databaseId ?? null\n    selectProductInput.value.variation = activeVariation.value ? attrValues.value : null\n    variation.value = variations\n}\n\nconst stockStatus = computed(() => {\n    if (isVariableProduct.value) return activeVariation.value?.stockStatus || StockStatusEnum.OUT_OF_STOCK\n    return type.value?.stockStatus || StockStatusEnum.OUT_OF_STOCK\n})\nconst disabledAddToCart = computed(() => {\n    if (isSimpleProduct.value)\n        return !type.value || stockStatus.value === StockStatusEnum.OUT_OF_STOCK || isUpdatingCart.value\n    return (\n        !type.value ||\n        stockStatus.value === StockStatusEnum.OUT_OF_STOCK ||\n        !activeVariation.value ||\n        isUpdatingCart.value\n    )\n})\n</script>\n\n<template>\n    <main class=\"container relative py-6 xl:max-w-7xl\">\n        <div v-if=\"product\">\n            <SEOHead :info=\"product\" />\n            <Breadcrumb\n                :product\n                class=\"mb-6\"\n                v-if=\"storeSettings.showBreadcrumbOnSingleProduct\"\n            />\n\n            <div class=\"flex flex-col gap-10 md:flex-row md:justify-between lg:gap-24\">\n                <ProductImageGallery\n                    v-if=\"product.image\"\n                    class=\"relative flex-1\"\n                    :main-image=\"product.image\"\n                    :gallery=\"product.galleryImages!\"\n                    :node=\"type\"\n                    :activeVariation=\"activeVariation || {}\"\n                />\n                <NuxtImg\n                    v-else\n                    class=\"relative flex-1 skeleton\"\n                    src=\"/images/placeholder.jpg\"\n                    :alt=\"product?.name || 'Product'\"\n                />\n\n                <div class=\"lg:max-w-md xl:max-w-lg md:py-2 w-full\">\n                    <div class=\"flex justify-between mb-4\">\n                        <div class=\"flex-1\">\n                            <h1 class=\"flex flex-wrap items-center gap-2 mb-2 text-2xl font-sesmibold\">\n                                {{ type.name }}\n                                <LazyWPAdminLink :link=\"`/wp-admin/post.php?post=${product.databaseId}&action=edit`\"\n                                    >Edit</LazyWPAdminLink\n                                >\n                            </h1>\n                            <StarRating\n                                :rating=\"product.averageRating || 0\"\n                                :count=\"product.reviewCount || 0\"\n                                v-if=\"storeSettings.showReviews\"\n                            />\n                        </div>\n                        <ProductPrice\n                            class=\"text-xl\"\n                            :sale-price=\"type.salePrice\"\n                            :regular-price=\"type.regularPrice\"\n                        />\n                    </div>\n\n                    <div class=\"grid gap-2 my-8 text-sm empty:hidden\">\n                        <div\n                            v-if=\"!isExternalProduct\"\n                            class=\"flex items-center gap-2\"\n                        >\n                            <span class=\"text-gray-400\">{{ $t('messages.shop.availability') }}: </span>\n                            <StockStatus\n                                :stockStatus\n                                @updated=\"mergeLiveStockStatus\"\n                            />\n                        </div>\n                        <div\n                            class=\"flex items-center gap-2\"\n                            v-if=\"storeSettings.showSKU && product.sku\"\n                        >\n                            <span class=\"text-gray-400\">{{ $t('messages.shop.sku') }}: </span>\n                            <span>{{ product.sku || 'N/A' }}</span>\n                        </div>\n                    </div>\n\n                    <div\n                        class=\"mb-8 font-light prose\"\n                        v-html=\"product.shortDescription || product.description\"\n                    />\n\n                    <hr />\n\n                    <form @submit.prevent=\"addToCart(selectProductInput)\">\n                        <AttributeSelections\n                            v-if=\"isVariableProduct && product.attributes && product.variations\"\n                            class=\"mt-4 mb-8\"\n                            :attributes=\"product.attributes.nodes\"\n                            :defaultAttributes=\"product.defaultAttributes\"\n                            :variations=\"product.variations.nodes\"\n                            @attrs-changed=\"updateSelectedVariations\"\n                        />\n                        <div\n                            v-if=\"isVariableProduct || isSimpleProduct\"\n                            class=\"fixed bottom-0 left-0 z-10 flex items-center w-full gap-4 p-4 mt-12 bg-white md:static md:bg-transparent bg-opacity-90 md:p-0\"\n                        >\n                            <input\n                                v-model=\"quantity\"\n                                type=\"number\"\n                                min=\"1\"\n                                aria-label=\"Quantity\"\n                                class=\"bg-white border rounded-lg flex text-left p-2.5 w-20 gap-4 items-center justify-center focus:outline-none\"\n                            />\n                            <AddToCartButton\n                                class=\"flex-1 w-full md:max-w-xs\"\n                                :disabled=\"disabledAddToCart\"\n                                :class=\"{ loading: isUpdatingCart }\"\n                            />\n                        </div>\n                        <a\n                            v-if=\"isExternalProduct && product.externalUrl\"\n                            :href=\"product.externalUrl\"\n                            target=\"_blank\"\n                            class=\"rounded-lg flex font-bold bg-gray-800 text-white text-center min-w-[150px] p-2.5 gap-4 items-center justify-center focus:outline-none\"\n                        >\n                            {{ product?.buttonText || 'View product' }}\n                        </a>\n                    </form>\n\n                    <div v-if=\"storeSettings.showProductCategoriesOnSingleProduct && product.productCategories\">\n                        <div class=\"grid gap-2 my-8 text-sm\">\n                            <div class=\"flex items-center gap-2\">\n                                <span class=\"text-gray-400\">{{ $t('messages.shop.category', 2) }}:</span>\n                                <div class=\"product-categories\">\n                                    <NuxtLink\n                                        v-for=\"category in product.productCategories.nodes\"\n                                        :key=\"category.databaseId\"\n                                        :to=\"`/product-category/${decodeURIComponent(category?.slug || '')}`\"\n                                        class=\"hover:text-primary\"\n                                        :title=\"category.name\"\n                                        >{{ category.name }}<span class=\"comma\">, </span>\n                                    </NuxtLink>\n                                </div>\n                            </div>\n                        </div>\n                        <hr />\n                    </div>\n\n                    <div class=\"flex flex-wrap gap-4\">\n                        <WishlistButton :product />\n                        <ShareButton :product />\n                    </div>\n                </div>\n            </div>\n            <div\n                v-if=\"product.description || product.reviews\"\n                class=\"my-32\"\n            >\n                <ProductTabs :product />\n            </div>\n            <div\n                class=\"my-32\"\n                v-if=\"product.related && storeSettings.showRelatedProducts\"\n            >\n                <div class=\"mb-4 text-xl font-semibold\">{{ $t('messages.shop.youMayLike') }}</div>\n                <ProductRow\n                    :products=\"product.related.nodes\"\n                    class=\"grid-cols-2 md:grid-cols-4 lg:grid-cols-5\"\n                />\n            </div>\n        </div>\n    </main>\n</template>\n\n<style scoped>\n.product-categories > a:last-child .comma {\n    display: none;\n}\n\ninput[type='number']::-webkit-inner-spin-button {\n    opacity: 1;\n}\n</style>\n"],"version":3}